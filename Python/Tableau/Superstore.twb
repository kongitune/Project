<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10100.17.0118.2108                               -->
<workbook source-build='10.1.4 (10100.17.0118.2108)' source-platform='win' version='10.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <repository-location id='US_Superstore_Rev' path='/workbooks' revision='1.1' />
  <preferences>
    <preference name='datagrid.autoupdate.max.filesize' value='100000000000' />
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.registrationform.stagingWebContentSwitch' value='1' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='10.1'>
      <aliases enabled='yes' />
      <column caption='Base Salary' datatype='integer' name='[Base Salary]' param-domain-type='range' role='measure' type='quantitative' value='50000'>
        <calculation class='tableau' formula='50000' />
        <range granularity='1000' min='0' />
      </column>
      <column caption='Commission Rate' datatype='real' default-format='n#,##0.0&quot;%&quot;;-#,##0.0&quot;%&quot;' name='[Commission Rate]' param-domain-type='range' role='measure' type='quantitative' value='18.400000000000002'>
        <calculation class='tableau' formula='18.400000000000002' />
        <range granularity='0.10000000000000001' max='100.0' min='1.0' />
      </column>
      <column caption='New Quota' datatype='integer' default-format='c&quot;$&quot;#,##0,K;(&quot;$&quot;#,##0,K)' name='[New Quota]' param-domain-type='range' role='measure' type='quantitative' value='500000'>
        <calculation class='tableau' formula='500000' />
        <range granularity='25000' min='100000' />
      </column>
      <column caption='Sort by' datatype='string' name='[Parameter 1 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Names&quot;'>
        <calculation class='tableau' formula='&quot;Names&quot;' />
        <members>
          <member value='&quot;\% quota ascending&quot;' />
          <member value='&quot;\% quota descending&quot;' />
          <member value='&quot;Names&quot;' />
        </members>
      </column>
      <column caption='New Business Growth' datatype='real' default-format='p0%' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='0.59999999999999998'>
        <calculation class='tableau' formula='0.59999999999999998' />
        <range granularity='0.01' max='1.0' min='0.0' />
      </column>
      <column caption='Churn Rate' datatype='real' default-format='p0.00%' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='0.064000000000000001'>
        <calculation class='tableau' formula='0.064000000000000001' />
        <range granularity='0.001' max='0.25' min='0.0' />
      </column>
      <column caption='State' datatype='string' name='[Parameter 3]' param-domain-type='list' role='measure' type='nominal' value='&quot;Alabama&quot;'>
        <calculation class='tableau' formula='&quot;Alabama&quot;' />
        <members>
          <member value='&quot;Alabama&quot;' />
          <member value='&quot;Arizona&quot;' />
          <member value='&quot;Arkansas&quot;' />
          <member value='&quot;California&quot;' />
          <member value='&quot;Colorado&quot;' />
          <member value='&quot;Connecticut&quot;' />
          <member value='&quot;Delaware&quot;' />
          <member value='&quot;District of Columbia&quot;' />
          <member value='&quot;Florida&quot;' />
          <member value='&quot;Georgia&quot;' />
          <member value='&quot;Idaho&quot;' />
          <member value='&quot;Illinois&quot;' />
          <member value='&quot;Indiana&quot;' />
          <member value='&quot;Iowa&quot;' />
          <member value='&quot;Kansas&quot;' />
          <member value='&quot;Kentucky&quot;' />
          <member value='&quot;Louisiana&quot;' />
          <member value='&quot;Maine&quot;' />
          <member value='&quot;Maryland&quot;' />
          <member value='&quot;Massachusetts&quot;' />
          <member value='&quot;Michigan&quot;' />
          <member value='&quot;Minnesota&quot;' />
          <member value='&quot;Mississippi&quot;' />
          <member value='&quot;Missouri&quot;' />
          <member value='&quot;Montana&quot;' />
          <member value='&quot;Nebraska&quot;' />
          <member value='&quot;Nevada&quot;' />
          <member value='&quot;New Hampshire&quot;' />
          <member value='&quot;New Jersey&quot;' />
          <member value='&quot;New Mexico&quot;' />
          <member value='&quot;New York&quot;' />
          <member value='&quot;North Carolina&quot;' />
          <member value='&quot;North Dakota&quot;' />
          <member value='&quot;Ohio&quot;' />
          <member value='&quot;Oklahoma&quot;' />
          <member value='&quot;Oregon&quot;' />
          <member value='&quot;Pennsylvania&quot;' />
          <member value='&quot;Rhode Island&quot;' />
          <member value='&quot;South Carolina&quot;' />
          <member value='&quot;South Dakota&quot;' />
          <member value='&quot;Tennessee&quot;' />
          <member value='&quot;Texas&quot;' />
          <member value='&quot;Utah&quot;' />
          <member value='&quot;Vermont&quot;' />
          <member value='&quot;Virginia&quot;' />
          <member value='&quot;Washington&quot;' />
          <member value='&quot;West Virginia&quot;' />
          <member value='&quot;Wisconsin&quot;' />
          <member value='&quot;Wyoming&quot;' />
        </members>
      </column>
    </datasource>
    <datasource caption='Sample - Superstore' inline='true' name='dataengine.42019.618651678240' version='10.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Sample - Superstore' name='dataengine.42019.618651678240leaf'>
            <connection class='dataengine' dbname='C:\Users\CRI00366\project\Python\Superstore.twb Files\Data/en_US-US 1/Sample - Superstore.tde' password='' schema='Extract' tablename='Extract' workgroup-auth-mode='as-is'>
              <calculations>
                <calculation column='[Number of Records]' formula='1' />
              </calculations>
            </connection>
          </named-connection>
        </named-connections>
        <relation connection='dataengine.42019.618651678240leaf' name='Extract' table='[Extract].[Extract]' type='table' />
        <calculations>
          <calculation column='[Number of Records]' formula='1' />
        </calculations>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Category]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>0</ordinal>
            <family>Orders</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>3</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;Furniture&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;Technology&quot;</statistic>
              <statistic aggregation='Count' datatype='integer'>9994</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>129</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>1</ordinal>
            <family>Orders</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>531</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;Aberdeen&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;Yuma&quot;</statistic>
              <statistic aggregation='Count' datatype='integer'>9994</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>2</ordinal>
            <family>Orders</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;United States&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;United States&quot;</statistic>
              <statistic aggregation='Count' datatype='integer'>9994</statistic>
              <statistic aggregation='Median' datatype='string'>&quot;United States&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer ID</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Customer ID]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Customer ID</remote-alias>
            <ordinal>3</ordinal>
            <family>Orders</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>793</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;AA-10315&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;ZD-21925&quot;</statistic>
              <statistic aggregation='Count' datatype='integer'>9994</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>10</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Customer Name]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Customer Name</remote-alias>
            <ordinal>4</ordinal>
            <family>Orders</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>793</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;Aaron Bergman&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;Zuschuss Donatelli&quot;</statistic>
              <statistic aggregation='Count' datatype='integer'>9994</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>11</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Discount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Discount]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Discount</remote-alias>
            <ordinal>5</ordinal>
            <family>Orders</family>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>12</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>0.0</statistic>
              <statistic aggregation='Max' datatype='real'>0.80000000000000004</statistic>
              <statistic aggregation='Count' datatype='integer'>9994</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>16</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number of Records</remote-name>
            <remote-type>16</remote-type>
            <local-name>[Number of Records]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Number of Records</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Sum' datatype='real'>9994.0</statistic>
              <statistic aggregation='Avg' datatype='real'>1.0</statistic>
              <statistic aggregation='Min' datatype='integer'>1</statistic>
              <statistic aggregation='Max' datatype='integer'>1</statistic>
              <statistic aggregation='Stdev' datatype='real'>0.0</statistic>
              <statistic aggregation='StdevP' datatype='real'>0.0</statistic>
              <statistic aggregation='Var' datatype='real'>0.0</statistic>
              <statistic aggregation='VarP' datatype='real'>0.0</statistic>
              <statistic aggregation='Count' datatype='integer'>9994</statistic>
              <statistic aggregation='Median' datatype='integer'>1</statistic>
              <statistic aggregation='SumXSqr' datatype='real'>9994.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Order Date]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Order Date</remote-alias>
            <ordinal>7</ordinal>
            <family>Orders</family>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <approx-count>1237</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='date'>#2013-01-03#</statistic>
              <statistic aggregation='Max' datatype='date'>#2016-12-30#</statistic>
              <statistic aggregation='Count' datatype='integer'>9994</statistic>
              <statistic aggregation='Median' datatype='date'>#2015-06-27#</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;date&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Order ID]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>8</ordinal>
            <family>Orders</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>5009</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;CA-2011-100006&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;US-2014-169551&quot;</statistic>
              <statistic aggregation='Count' datatype='integer'>9994</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>14</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>4</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Postal Code</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Postal Code]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Postal Code</remote-alias>
            <ordinal>9</ordinal>
            <family>Orders</family>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>631</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Sum' datatype='real'>551572652.0</statistic>
              <statistic aggregation='Avg' datatype='real'>55190.379427656597</statistic>
              <statistic aggregation='Min' datatype='integer'>1040</statistic>
              <statistic aggregation='Max' datatype='integer'>99301</statistic>
              <statistic aggregation='Stdev' datatype='real'>32063.693350364487</statistic>
              <statistic aggregation='StdevP' datatype='real'>32062.089163078908</statistic>
              <statistic aggregation='Var' datatype='real'>1028080431.2662077</statistic>
              <statistic aggregation='VarP' datatype='real'>1027977561.501222</statistic>
              <statistic aggregation='Count' datatype='integer'>9994</statistic>
              <statistic aggregation='SumXSqr' datatype='real'>40715111695442.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>9</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product ID</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Product ID]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Product ID</remote-alias>
            <ordinal>10</ordinal>
            <family>Orders</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1862</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;FUR-BO-10000112&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;TEC-PH-10004977&quot;</statistic>
              <statistic aggregation='Count' datatype='integer'>9994</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>13</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Product Name]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Product Name</remote-alias>
            <ordinal>11</ordinal>
            <family>Orders</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1850</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;\&quot;While you Were Out\&quot; Message Book, One Form per Page&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;Zipper Ring Binder Pockets&quot;</statistic>
              <statistic aggregation='Count' datatype='integer'>9994</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>12</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>4</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Profit]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>12</ordinal>
            <family>Orders</family>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>7545</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Sum' datatype='real'>286397.02169999923</statistic>
              <statistic aggregation='Avg' datatype='real'>28.656896307784592</statistic>
              <statistic aggregation='Min' datatype='real'>-6599.978000000001</statistic>
              <statistic aggregation='Max' datatype='real'>8399.9759999999987</statistic>
              <statistic aggregation='Stdev' datatype='real'>234.26010769095728</statistic>
              <statistic aggregation='StdevP' datatype='real'>234.24838736035878</statistic>
              <statistic aggregation='Var' datatype='real'>54877.798055378902</statistic>
              <statistic aggregation='VarP' datatype='real'>54872.30698092869</statistic>
              <statistic aggregation='Count' datatype='integer'>9994</statistic>
              <statistic aggregation='SumXSqr' datatype='real'>556601085.72111654</statistic>
            </statistics>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quantity</remote-name>
            <remote-type>16</remote-type>
            <local-name>[Quantity]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Quantity</remote-alias>
            <ordinal>13</ordinal>
            <family>Orders</family>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>14</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Sum' datatype='real'>37873.0</statistic>
              <statistic aggregation='Avg' datatype='real'>3.7895737442465478</statistic>
              <statistic aggregation='Min' datatype='integer'>1</statistic>
              <statistic aggregation='Max' datatype='integer'>14</statistic>
              <statistic aggregation='Stdev' datatype='real'>2.2251096911413999</statistic>
              <statistic aggregation='StdevP' datatype='real'>2.2249983660786095</statistic>
              <statistic aggregation='Var' datatype='real'>4.9511131376113768</statistic>
              <statistic aggregation='VarP' datatype='real'>4.9506177290524809</statistic>
              <statistic aggregation='Count' datatype='integer'>9994</statistic>
              <statistic aggregation='SumXSqr' datatype='real'>192999.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>14</ordinal>
            <family>Orders</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>4</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;Central&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;West&quot;</statistic>
              <statistic aggregation='Count' datatype='integer'>9994</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>4</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Row ID</remote-name>
            <remote-type>2</remote-type>
            <local-name>[Row ID]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Row ID</remote-alias>
            <ordinal>15</ordinal>
            <family>Orders</family>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>9994</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Sum' datatype='real'>49945015.0</statistic>
              <statistic aggregation='Avg' datatype='real'>4997.5</statistic>
              <statistic aggregation='Min' datatype='integer'>1</statistic>
              <statistic aggregation='Max' datatype='integer'>9994</statistic>
              <statistic aggregation='Stdev' datatype='real'>2885.1636290974325</statistic>
              <statistic aggregation='StdevP' datatype='real'>2885.0192806981377</statistic>
              <statistic aggregation='Var' datatype='real'>8324169.166666667</statistic>
              <statistic aggregation='VarP' datatype='real'>8323336.25</statistic>
              <statistic aggregation='Count' datatype='integer'>9994</statistic>
              <statistic aggregation='SumXSqr' datatype='real'>332783634945.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>15</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sales]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>16</ordinal>
            <family>Orders</family>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>6144</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Sum' datatype='real'>2297200.8602999486</statistic>
              <statistic aggregation='Avg' datatype='real'>229.85800083049315</statistic>
              <statistic aggregation='Min' datatype='real'>0.44399999999999995</statistic>
              <statistic aggregation='Max' datatype='real'>22638.48</statistic>
              <statistic aggregation='Stdev' datatype='real'>623.245100508684</statistic>
              <statistic aggregation='StdevP' datatype='real'>623.21391876504924</statistic>
              <statistic aggregation='Var' datatype='real'>388434.4553080796</statistic>
              <statistic aggregation='VarP' datatype='real'>388395.58854248945</statistic>
              <statistic aggregation='Count' datatype='integer'>9994</statistic>
              <statistic aggregation='SumXSqr' datatype='real'>4409655509.1482744</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Segment</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Segment]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Segment</remote-alias>
            <ordinal>17</ordinal>
            <family>Orders</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>3</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;Consumer&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;Home Office&quot;</statistic>
              <statistic aggregation='Count' datatype='integer'>9994</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>3</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Ship Date]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Ship Date</remote-alias>
            <ordinal>18</ordinal>
            <family>Orders</family>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <approx-count>1334</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='date'>#2013-01-07#</statistic>
              <statistic aggregation='Max' datatype='date'>#2017-01-05#</statistic>
              <statistic aggregation='Count' datatype='integer'>9994</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;date&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Mode</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Ship Mode]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Ship Mode</remote-alias>
            <ordinal>19</ordinal>
            <family>Orders</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>4</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;First Class&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;Standard Class&quot;</statistic>
              <statistic aggregation='Count' datatype='integer'>9994</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>5</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>129</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>20</ordinal>
            <family>Orders</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>49</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;Alabama&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;Wyoming&quot;</statistic>
              <statistic aggregation='Count' datatype='integer'>9994</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>7</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sub-Category</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Sub-Category]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Sub-Category</remote-alias>
            <ordinal>21</ordinal>
            <family>Orders</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>17</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;Accessories&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;Tables&quot;</statistic>
              <statistic aggregation='Count' datatype='integer'>9994</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>6</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[dataengine.42019.618651678240].[ctd:Customer Name:qk]&quot;' value='Count of Customers' />
        </aliases>
      </column>
      <column caption='Days to Ship Actual' datatype='integer' name='[Calculation_0831103151444568]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='DATEDIFF(&apos;day&apos;,[Order Date],[Ship Date])' />
      </column>
      <column caption='Sales estimate' datatype='real' default-format='c&quot;$&quot;#,##0,.0K;(&quot;$&quot;#,##0,.0K)' name='[Calculation_1641214165608856]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Sales]*(1-[Parameters].[Parameter 2])*(1+[Parameters].[Parameter 1])' />
      </column>
      <column caption='Sales Forecast' datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Calculation_5421109230915137]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Sales]*(1-[Parameters].[Parameter 2])*(1+[Parameters].[Parameter 1])' />
      </column>
      <column caption='Ship Status' datatype='string' name='[Calculation_6401103171259723]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='if [Calculation_0831103151444568]&gt; [Calculation_6861103170623145] then &quot;Shipped Late&quot; &#13;&#10;elseIF [Calculation_0831103151444568]= [Calculation_6861103170623145] then &quot;Shipped On Time&quot;&#13;&#10;Else &quot;Shipped Early&quot; end' />
        <desc>
          <formatted-text>
            <run>Was shipment early, ontime or late based on ship mode</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Days to Ship Scheduled' datatype='integer' name='[Calculation_6861103170623145]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CASE  [Ship Mode]&#13;&#10;WHEN &quot;Same Day&quot; THEN 0&#13;&#10;WHEN &quot;First Class&quot; THEN 1&#13;&#10;WHEN &quot;Second Class&quot; THEN 3&#13;&#10;WHEN &quot;Standard Class&quot; THEN 6&#13;&#10;END' />
      </column>
      <column caption='2013 sales' datatype='real' default-format='c&quot;$&quot;#,##0,.0K;(&quot;$&quot;#,##0,.0K)' name='[Calculation_8821129170240873]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='if year([Order Date])=2013 then [Sales]&#13;&#10;else NULL end' />
      </column>
      <column caption='Order Profitable?' datatype='boolean' name='[Calculation_9060122104947471]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='{fixed [Order ID]:sum([Profit])}&gt;0&#13;&#10;// calculates the profit at the order level' />
        <aliases>
          <alias key='false' value='Unprofitable' />
          <alias key='true' value='Profitable' />
        </aliases>
        <desc>
          <formatted-text>
            <run>A level of detail expression that calculates profitability for each Order</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Profit per Customer' datatype='real' default-format='C1033%' name='[Calculation_9321103144526191 1]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Profit])/countD([Customer Name])' />
      </column>
      <column caption='Sales per Customer' datatype='real' default-format='C1033%' name='[Calculation_9321103144526191]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='Sum([Sales])/countD([Customer Name])' />
      </column>
      <column caption='Profit Ratio' datatype='real' default-format='p0.0%' name='[Calculation_9921103144103743]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Profit])/sum([Sales])' />
      </column>
      <column caption='Sales above Target?' datatype='string' name='[Calculation_9951107165644870]' role='measure' type='nominal'>
        <calculation class='tableau' formula='If Sum([Sales])&gt;SUM([dataengine.42019.622799629629].[Sales Target]) then &quot;Above Target&quot; else &quot;Below Target&quot; end' />
        <desc>
          <formatted-text>
            <run>Used with &quot;Sales Target&quot; data source</run>
          </formatted-text>
        </desc>
      </column>
      <column datatype='string' name='[Category]' role='dimension' type='nominal' />
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Customer Name]' role='dimension' type='nominal' />
      <column datatype='real' default-format='p0.00%' name='[Discount]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
      <column datatype='string' name='[Order ID]' role='dimension' type='nominal' />
      <column datatype='real' hidden='true' name='[Order Quantity]' role='measure' type='quantitative' />
      <column datatype='integer' default-format='*00000' name='[Postal Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <column datatype='string' name='[Product Name]' role='dimension' type='nominal' />
      <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Profit]' role='measure' type='quantitative' />
      <column datatype='string' name='[Region]' role='dimension' type='nominal' />
      <column caption='Units estimate' datatype='real' default-format='n#,##0;-#,##0' name='[Sales est (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='ROUND([Quantity]*(1-[Parameters].[Parameter 2])*(1+[Parameters].[Parameter 1]),0)' scope-isolation='false' />
      </column>
      <column caption='Profit per Order' datatype='real' default-format='C1033%' name='[Sales per Customer (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='Sum([Profit])/countD([Order ID])' />
      </column>
      <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Sales]' role='measure' type='quantitative' />
      <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
      <column datatype='string' name='[Ship Mode]' role='dimension' type='nominal' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
      <column-instance column='[Customer Name]' derivation='CountD' name='[ctd:Customer Name:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Order Date]' derivation='Month' name='[mn:Order Date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Calculation_6401103171259723]' derivation='None' name='[none:Calculation_6401103171259723:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_9060122104947471]' derivation='None' name='[none:Calculation_9060122104947471:nk]' pivot='key' type='nominal' />
      <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[Postal Code]' derivation='None' name='[none:Postal Code:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
      <column-instance column='[Ship Mode]' derivation='None' name='[none:Ship Mode:nk]' pivot='key' type='nominal' />
      <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
      <column-instance column='[Order Date]' derivation='Quarter' name='[qr:Order Date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Sales]' derivation='Sum' name='[rank:sum:Sales:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Columns' rank-options='Competition,Descending' type='Rank' />
      </column-instance>
      <column-instance column='[Calculation_1641214165608856]' derivation='Sum' name='[sum:Calculation_1641214165608856:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_5421109230915137]' derivation='Sum' name='[sum:Calculation_5421109230915137:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Sales est (copy)]' derivation='Sum' name='[sum:Sales est (copy):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Order Date]' derivation='Month-Trunc' name='[tmn:Order Date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Order Date]' derivation='Week-Trunc' name='[twk:Order Date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Calculation_9951107165644870]' derivation='User' name='[usr:Calculation_9951107165644870:nk]' pivot='key' type='nominal' />
      <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
      <group hidden='true' name='[Action (Category)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Category]' />
        </groupfilter>
      </group>
      <group caption='Action (Category,MONTH(Order Date))' hidden='true' name='[Action (Category,MONTH(Order Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Category]' />
          <groupfilter function='level-members' level='[tmn:Order Date:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (Category,YEAR(Order Date),MONTH(Order Date))' hidden='true' name='[Action (Category,YEAR(Order Date),MONTH(Order Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Category]' />
          <groupfilter function='level-members' level='[yr:Order Date:ok]' />
          <groupfilter function='level-members' level='[mn:Order Date:ok]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Action (Country)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Country / Region]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Action (Country,YEAR(Order Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Country / Region]' />
          <groupfilter function='level-members' level='[yr:Order Date:ok]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Action (Customer Segment)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Segment:nk]' />
        </groupfilter>
      </group>
      <group caption='Action (Delayed?)' hidden='true' name='[Action (Delayed?)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_6401103171259723]' />
        </groupfilter>
      </group>
      <group caption='Action (Delayed?,YEAR(Order Date),MONTH(Order Date),Ship Mode)' hidden='true' name='[Action (Delayed?,YEAR(Order Date),MONTH(Order Date),Ship Mode)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_6401103171259723]' />
          <groupfilter function='level-members' level='[yr:Order Date:ok]' />
          <groupfilter function='level-members' level='[tmn:Order Date:ok]' />
          <groupfilter function='level-members' level='[none:Ship Mode:nk]' />
        </groupfilter>
      </group>
      <group caption='Action (Delayed?,YEAR(Order Date),WEEK(Order Date))' hidden='true' name='[Action (Delayed?,YEAR(Order Date),WEEK(Order Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_6401103171259723]' />
          <groupfilter function='level-members' level='[yr:Order Date:ok]' />
          <groupfilter function='level-members' level='[twk:Order Date:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (Delayed?,YEAR(Order Date),WEEK(Order Date),Ship Mode)' hidden='true' name='[Action (Delayed?,YEAR(Order Date),WEEK(Order Date),Ship Mode)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_6401103171259723]' />
          <groupfilter function='level-members' level='[yr:Order Date:ok]' />
          <groupfilter function='level-members' level='[twk:Order Date:ok]' />
          <groupfilter function='level-members' level='[none:Ship Mode:nk]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Action (Department,Category)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Department]' />
          <groupfilter function='level-members' level='[Category]' />
        </groupfilter>
      </group>
      <group caption='Action (MONTH(Order Date),Product Category)' hidden='true' name='[Action (MONTH(Order Date),Product Category)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[tmn:Order Date:ok]' />
          <groupfilter function='level-members' level='[none:Category:nk]' />
        </groupfilter>
      </group>
      <group caption='Action (MONTH(Order Date),Product Category,ProductSub-Category)' hidden='true' name='[Action (MONTH(Order Date),Product Category,ProductSub-Category)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[mn:Order Date:ok]' />
          <groupfilter function='level-members' level='[none:Category:nk]' />
          <groupfilter function='level-members' level='[none:Sub-Category:nk]' />
        </groupfilter>
      </group>
      <group caption='Action (MONTH(Order Date),Product Category,Segment) 1' hidden='true' name='[Action (MONTH(Order Date),Product Category,Segment) 1]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[mn:Order Date:ok]' />
          <groupfilter function='level-members' level='[none:Category:nk]' />
          <groupfilter function='level-members' level='[Segment]' />
        </groupfilter>
      </group>
      <group caption='Action (MONTH(Order Date),Product Category,Segment)' hidden='true' name='[Action (MONTH(Order Date),Product Category,Segment)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[tmn:Order Date:ok]' />
          <groupfilter function='level-members' level='[none:Category:nk]' />
          <groupfilter function='level-members' level='[Segment]' />
        </groupfilter>
      </group>
      <group caption='Action (MONTH(Order Date),ProductSub-Category)' hidden='true' name='[Action (MONTH(Order Date),ProductSub-Category)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[mn:Order Date:ok]' />
          <groupfilter function='level-members' level='[none:Sub-Category:nk]' />
        </groupfilter>
      </group>
      <group caption='Action (MONTH(Order Date),Segment)' hidden='true' name='[Action (MONTH(Order Date),Segment)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[tmn:Order Date:ok]' />
          <groupfilter function='level-members' level='[Segment]' />
        </groupfilter>
      </group>
      <group caption='Action (Order Profitable?,Category,MONTH(Order Date))' hidden='true' name='[Action (Order Profitable?,Category,MONTH(Order Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_9060122104947471]' />
          <groupfilter function='level-members' level='[Category]' />
          <groupfilter function='level-members' level='[tmn:Order Date:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (Order Profitable?,MONTH(Order Date),Segment)' hidden='true' name='[Action (Order Profitable?,MONTH(Order Date),Segment)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_9060122104947471]' />
          <groupfilter function='level-members' level='[tmn:Order Date:ok]' />
          <groupfilter function='level-members' level='[Segment]' />
        </groupfilter>
      </group>
      <group caption='Action (Postal Code,State) 1' hidden='true' name='[Action (Postal Code,State) 1]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Postal Code]' />
          <groupfilter function='level-members' level='[State]' />
        </groupfilter>
      </group>
      <group caption='Action (Postal Code,State)' hidden='true' name='[Action (Postal Code,State)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Postal Code:ok]' />
          <groupfilter function='level-members' level='[State]' />
        </groupfilter>
      </group>
      <group caption='Action (Product Category,ProductSub-Category,Segment)' hidden='true' name='[Action (Product Category,ProductSub-Category,Segment)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Category:nk]' />
          <groupfilter function='level-members' level='[none:Sub-Category:nk]' />
          <groupfilter function='level-members' level='[Segment]' />
        </groupfilter>
      </group>
      <group caption='Action (ProductSub-Category,Region,Segment)' hidden='true' name='[Action (ProductSub-Category,Region,Segment)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Sub-Category:nk]' />
          <groupfilter function='level-members' level='[Region]' />
          <groupfilter function='level-members' level='[Segment]' />
        </groupfilter>
      </group>
      <group caption='Action (ProductSub-Category,State)' hidden='true' name='[Action (ProductSub-Category,State)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Sub-Category:nk]' />
          <groupfilter function='level-members' level='[State]' />
        </groupfilter>
      </group>
      <group caption='Action (QUARTER(Order Date),MONTH(Order Date),Product Category,ProductSub-Category)' hidden='true' name='[Action (QUARTER(Order Date),MONTH(Order Date),Product Category,ProductSub-Category)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[qr:Order Date:ok]' />
          <groupfilter function='level-members' level='[mn:Order Date:ok]' />
          <groupfilter function='level-members' level='[none:Category:nk]' />
          <groupfilter function='level-members' level='[none:Sub-Category:nk]' />
        </groupfilter>
      </group>
      <group caption='Action (QUARTER(Order Date),MONTH(Order Date),ProductSub-Category)' hidden='true' name='[Action (QUARTER(Order Date),MONTH(Order Date),ProductSub-Category)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[qr:Order Date:ok]' />
          <groupfilter function='level-members' level='[mn:Order Date:ok]' />
          <groupfilter function='level-members' level='[none:Sub-Category:nk]' />
        </groupfilter>
      </group>
      <group caption='Action (Region)' hidden='true' name='[Action (Region)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Region]' />
        </groupfilter>
      </group>
      <group caption='Action (Segment)' hidden='true' name='[Action (Segment)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Segment]' />
        </groupfilter>
      </group>
      <group caption='Action (Ship Status)' hidden='true' name='[Action (Ship Status)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_6401103171259723]' />
        </groupfilter>
      </group>
      <group caption='Action (Ship Status,Customer Name,Order Date,Order ID,Product Name,Ship Mode)' hidden='true' name='[Action (Ship Status,Customer Name,Order Date,Order ID,Product Name,Ship Mode)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_6401103171259723]' />
          <groupfilter function='level-members' level='[Customer Name]' />
          <groupfilter function='level-members' level='[Order Date]' />
          <groupfilter function='level-members' level='[Order ID]' />
          <groupfilter function='level-members' level='[Product Name]' />
          <groupfilter function='level-members' level='[Ship Mode]' />
        </groupfilter>
      </group>
      <group caption='Action (Ship Status,YEAR(Order Date),WEEK(Order Date))' hidden='true' name='[Action (Ship Status,YEAR(Order Date),WEEK(Order Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_6401103171259723]' />
          <groupfilter function='level-members' level='[yr:Order Date:ok]' />
          <groupfilter function='level-members' level='[twk:Order Date:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (State)' hidden='true' name='[Action (State)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[State]' />
        </groupfilter>
      </group>
      <group caption='Action (Transaction Profit,MONTH(Order Date),Segment)' hidden='true' name='[Action (Transaction Profit,MONTH(Order Date),Segment)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_9060122104947471]' />
          <groupfilter function='level-members' level='[tmn:Order Date:ok]' />
          <groupfilter function='level-members' level='[Segment]' />
        </groupfilter>
      </group>
      <group caption='Action (YEAR(Order Date),MONTH(Order Date))' hidden='true' name='[Action (YEAR(Order Date),MONTH(Order Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[yr:Order Date:ok]' />
          <groupfilter function='level-members' level='[mn:Order Date:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (YEAR(Order Date),MONTH(Order Date),Product Category)' hidden='true' name='[Action (YEAR(Order Date),MONTH(Order Date),Product Category)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[yr:Order Date:ok]' />
          <groupfilter function='level-members' level='[mn:Order Date:ok]' />
          <groupfilter function='level-members' level='[none:Category:nk]' />
        </groupfilter>
      </group>
      <group caption='Action (YEAR(Order Date),MONTH(Order Date),Region)' hidden='true' name='[Action (YEAR(Order Date),MONTH(Order Date),Region)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[yr:Order Date:ok]' />
          <groupfilter function='level-members' level='[mn:Order Date:ok]' />
          <groupfilter function='level-members' level='[Region]' />
        </groupfilter>
      </group>
      <group caption='Action (YEAR(Order Date),MONTH(Order Date),Segment)' hidden='true' name='[Action (YEAR(Order Date),MONTH(Order Date),Segment)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[yr:Order Date:ok]' />
          <groupfilter function='level-members' level='[tmn:Order Date:ok]' />
          <groupfilter function='level-members' level='[Segment]' />
        </groupfilter>
      </group>
      <group caption='Action (YEAR(Order Date),MONTH(Order Date),Ship Mode)' hidden='true' name='[Action (YEAR(Order Date),MONTH(Order Date),Ship Mode)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[yr:Order Date:ok]' />
          <groupfilter function='level-members' level='[tmn:Order Date:ok]' />
          <groupfilter function='level-members' level='[none:Ship Mode:nk]' />
        </groupfilter>
      </group>
      <group caption='Action (YEAR(Order Date),QUARTER(Order Date),MONTH(Order Date),Region)' hidden='true' name='[Action (YEAR(Order Date),QUARTER(Order Date),MONTH(Order Date),Region)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[yr:Order Date:ok]' />
          <groupfilter function='level-members' level='[qr:Order Date:ok]' />
          <groupfilter function='level-members' level='[mn:Order Date:ok]' />
          <groupfilter function='level-members' level='[Region]' />
        </groupfilter>
      </group>
      <group caption='Action (YEAR(Order Date),WEEK(Order Date),Ship Mode)' hidden='true' name='[Action (YEAR(Order Date),WEEK(Order Date),Ship Mode)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[yr:Order Date:ok]' />
          <groupfilter function='level-members' level='[twk:Order Date:ok]' />
          <groupfilter function='level-members' level='[none:Ship Mode:nk]' />
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='Location'>
          <field>[Country]</field>
          <field>[State]</field>
          <field>[City]</field>
          <field>[Postal Code]</field>
        </drill-path>
        <drill-path name='Product'>
          <field>[Category]</field>
          <field>[Sub-Category]</field>
          <field>[Product Name]</field>
        </drill-path>
      </drill-paths>
      <folder name='Customer' role='dimensions'>
        <folder-item name='[Customer Name]' type='field' />
        <folder-item name='[Segment]' type='field' />
      </folder>
      <folder name='Order' role='dimensions'>
        <folder-item name='[Order Date]' type='field' />
        <folder-item name='[Order ID]' type='field' />
        <folder-item name='[Ship Date]' type='field' />
        <folder-item name='[Ship Mode]' type='field' />
      </folder>
      <layout dim-ordering='alphabetic' dim-percentage='0.421634' measure-ordering='alphabetic' measure-percentage='0.395143' parameter-percentage='0.183223' show-aliased-fields='true' show-structure='false' user-set-layout='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[Calculation_9921103144103743]' max='0.5' min='-0.5' palette='tableau-orange-blue' type='interpolated' />
          <encoding attr='color' field='[none:Forecast Indicator:nk]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;Actual&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Estimate&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[usr:Calculation_9951107165644870:nk]' palette='nuriel_stone_10_0' type='palette'>
            <map to='#027b8e'>
              <bucket>&quot;Above Target&quot;</bucket>
            </map>
            <map to='#a39fc9'>
              <bucket>&quot;Below Target&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Calculation_6401103171259723:nk]' palette='tableau10_10_0' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Shipped Early&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;Shipped Late&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Shipped On Time&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Segment:nk]&#10;[none:Forecast Indicator:nk]' type='palette'>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Consumer&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Home Office&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Corporate&quot;</bucket>
            </map-pri>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#000000'>
              <bucket>&quot;[dataengine.42019.618651678240].[sum:Sales:qk]&quot;</bucket>
            </map>
            <map to='#1c70ae'>
              <bucket>&quot;[dataengine.42019.618651678240].[sum:Calculation_5421109230915137:qk]&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;[dataengine.42019.618651678240].[usr:Calculation_9330126204734562:qk]&quot;</bucket>
            </map>
            <map to='#414451'>
              <bucket>&quot;[dataengine.42019.618651678240].[rank:sum:Sales:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[dataengine.42019.618651678240].[sum:Calculation_1641214165608856:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[dataengine.42019.618651678240].[sum:Sales est (copy):qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Calculation_9060122104947471:nk]' type='palette'>
            <map to='#6388b4'>
              <bucket>true</bucket>
            </map>
            <map to='#ffae34'>
              <bucket>false</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <default-sorts>
        <sort class='manual' column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </sort>
      </default-sorts>
      <datasource-dependencies datasource='Parameters'>
        <column caption='New Business Growth' datatype='real' default-format='p0%' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='0.59999999999999998'>
          <calculation class='tableau' formula='0.59999999999999998' />
          <range granularity='0.01' max='1.0' min='0.0' />
        </column>
        <column caption='Churn Rate' datatype='real' default-format='p0.00%' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='0.064000000000000001'>
          <calculation class='tableau' formula='0.064000000000000001' />
          <range granularity='0.001' max='0.25' min='0.0' />
        </column>
      </datasource-dependencies>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='State Filter' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Overview' type='sheet' worksheet='Sale Map' />
      <link caption='State Filter' delimiter=',' escape='\' expression='tsl:Overview?%5Bdataengine.42019.618651678240%5D.%5BState%5D~s0=&lt;[State]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Sale Map' />
        <param name='target' value='Overview' />
      </command>
    </action>
    <action caption='Month Highlight' name='[Action5]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Overview' type='sheet'>
        <exclude-sheet name='Sale Map' />
      </source>
      <command command='tsc:brush'>
        <param name='exclude' value='Sale Map' />
        <param name='field-captions' value='MONTH(Order Date)' />
        <param name='target' value='Overview' />
      </command>
    </action>
    <action caption='State Highlight (map)' name='[Action7]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Overview' type='sheet'>
        <exclude-sheet name='Sales by Product' />
        <exclude-sheet name='Sales by Segment' />
      </source>
      <command command='tsc:brush'>
        <param name='exclude' value='Sales by Product,Sales by Segment' />
        <param name='field-captions' value='State' />
        <param name='target' value='Overview' />
      </command>
    </action>
    <datasources>
      <datasource caption='Sample - Superstore' name='dataengine.42019.618651678240' />
    </datasources>
    <datasource-dependencies datasource='dataengine.42019.618651678240'>
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
    </datasource-dependencies>
  </actions>
  <worksheets>
    <worksheet name='Sale Map'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='13'>Sales by Geography</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample - Superstore' name='dataengine.42019.618651678240' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='dataengine.42019.618651678240'>
            <column caption='Order Profitable?' datatype='boolean' name='[Calculation_9060122104947471]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='{fixed [Order ID]:sum([Profit])}&gt;0&#13;&#10;// calculates the profit at the order level' />
              <aliases>
                <alias key='false' value='Unprofitable' />
                <alias key='true' value='Profitable' />
              </aliases>
              <desc>
                <formatted-text>
                  <run>A level of detail expression that calculates profitability for each Order</run>
                </formatted-text>
              </desc>
            </column>
            <column caption='Profit Ratio' datatype='real' default-format='p0.0%' name='[Calculation_9921103144103743]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Profit])/sum([Sales])' />
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Order ID]' role='dimension' type='nominal' />
            <column datatype='integer' default-format='*00000' name='[Postal Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
            <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Order Date]' derivation='None' name='[none:Order Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Postal Code]' derivation='None' name='[none:Postal Code:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Month-Trunc' name='[tmn:Order Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_9921103144103743]' derivation='User' name='[usr:Calculation_9921103144103743:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[dataengine.42019.618651678240].[Action (Category,MONTH(Order Date))]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Category]' />
              <groupfilter function='level-members' level='[tmn:Order Date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[dataengine.42019.618651678240].[Action (MONTH(Order Date),Product Category)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[tmn:Order Date:ok]' />
              <groupfilter function='level-members' level='[none:Category:nk]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[dataengine.42019.618651678240].[Action (MONTH(Order Date),Segment)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[tmn:Order Date:ok]' />
              <groupfilter function='level-members' level='[Segment]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[dataengine.42019.618651678240].[Action (Order Profitable?,Category,MONTH(Order Date))]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_9060122104947471]' />
              <groupfilter function='level-members' level='[Category]' />
              <groupfilter function='level-members' level='[tmn:Order Date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[dataengine.42019.618651678240].[Action (Order Profitable?,MONTH(Order Date),Segment)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_9060122104947471]' />
              <groupfilter function='level-members' level='[tmn:Order Date:ok]' />
              <groupfilter function='level-members' level='[Segment]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[dataengine.42019.618651678240].[Action (Transaction Profit,MONTH(Order Date),Segment)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_9060122104947471]' />
              <groupfilter function='level-members' level='[tmn:Order Date:ok]' />
              <groupfilter function='level-members' level='[Segment]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[dataengine.42019.618651678240].[Action (YEAR(Order Date),MONTH(Order Date),Segment)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[yr:Order Date:ok]' />
              <groupfilter function='level-members' level='[tmn:Order Date:ok]' />
              <groupfilter function='level-members' level='[Segment]' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[dataengine.42019.618651678240].[none:Order Date:qk]' filter-group='13' included-values='in-range'>
            <min>#2013-01-03#</min>
            <max>#2016-12-30#</max>
          </filter>
          <sort class='computed' column='[dataengine.42019.618651678240].[none:Postal Code:ok]' direction='ASC' using='[dataengine.42019.618651678240].[sum:Profit:qk]' />
          <filter class='categorical' column='[dataengine.42019.618651678240].[none:Region:nk]' filter-group='14'>
            <groupfilter function='level-members' level='[none:Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[dataengine.42019.618651678240].[usr:Calculation_9921103144103743:qk]' included-values='in-range-or-null'>
            <min>-2.7000000000000011</min>
            <max>0.5</max>
          </filter>
          <slices>
            <column>[dataengine.42019.618651678240].[none:Order Date:qk]</column>
            <column>[dataengine.42019.618651678240].[Action (MONTH(Order Date),Segment)]</column>
            <column>[dataengine.42019.618651678240].[Action (MONTH(Order Date),Product Category)]</column>
            <column>[dataengine.42019.618651678240].[Action (YEAR(Order Date),MONTH(Order Date),Segment)]</column>
            <column>[dataengine.42019.618651678240].[Action (Category,MONTH(Order Date))]</column>
            <column>[dataengine.42019.618651678240].[Action (Transaction Profit,MONTH(Order Date),Segment)]</column>
            <column>[dataengine.42019.618651678240].[Action (Order Profitable?,MONTH(Order Date),Segment)]</column>
            <column>[dataengine.42019.618651678240].[Action (Order Profitable?,Category,MONTH(Order Date))]</column>
            <column>[dataengine.42019.618651678240].[none:Region:nk]</column>
            <column>[dataengine.42019.618651678240].[usr:Calculation_9921103144103743:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[dataengine.42019.618651678240].[sum:Sales:qk]' palette='tableau-blue' type='interpolated' />
            <encoding attr='color' field='[dataengine.42019.618651678240].[usr:Calculation_9921103144103743:qk]' min='-0.5' num-steps='6' palette='orange_blue_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='font-family' value='Tableau Book' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='size' field='[dataengine.42019.618651678240].[sum:Sales:qk]' value='Sales' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='false' />
            <format attr='enabled' id='tab_coastline' value='true' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='false' />
            <format attr='enabled' id='light_pp2_statebounds' value='true' />
            <format attr='enabled' id='light_pp2_statelabels' value='true' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.20000000298023224' />
            <format attr='map-style' value='tableau-light-gray' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='background-color' value='#f7f7f7' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='2' />
            <format attr='border-color' value='#f7f7f7' />
          </style-rule>
        </style>
        <panes>
          <pane id='2'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[dataengine.42019.618651678240].[usr:Calculation_9921103144103743:qk]' />
              <lod column='[dataengine.42019.618651678240].[none:Postal Code:ok]' />
              <lod column='[dataengine.42019.618651678240].[none:State:nk]' />
              <size column='[dataengine.42019.618651678240].[sum:Sales:qk]' />
              <tooltip column='[dataengine.42019.618651678240].[sum:Profit:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#d3872a' fontname='Tableau Bold' fontsize='12'>&lt;[dataengine.42019.618651678240].[none:State:nk]&gt; - &lt;[dataengine.42019.618651678240].[none:Postal Code:ok]&gt;</run>
                <run fontcolor='#555555' fontsize='12'>Æ&#10;</run>
                <run fontcolor='#787878' fontname='Tableau Light' indent='1170'>&#10;Profit Ratio:</run>
                <run bold='true' fontcolor='#1b1b1b' fontname='Tableau Light' indent='1170'>Æ &#9;</run>
                <run fontcolor='#1b1b1b' fontname='Tableau Semibold' indent='1170'>&lt;[dataengine.42019.618651678240].[usr:Calculation_9921103144103743:qk]&gt;</run>
                <run fontcolor='#787878' fontname='Tableau Light' indent='1170'>&#10;Sales: &#9;</run>
                <run fontname='Tableau Semibold' indent='1170'>&lt;[dataengine.42019.618651678240].[sum:Sales:qk]&gt;</run>
                <run fontcolor='#787878' fontname='Tableau Light' indent='1170'>&#10;Profit: &#9;</run>
                <run fontcolor='#1b1b1b' fontname='Tableau Semibold' indent='1170'>&lt;[dataengine.42019.618651678240].[sum:Profit:qk]&gt;</run>
                <run fontcolor='#898989' indent='1170'>Æ&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.7691160440444946' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#898989' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[dataengine.42019.618651678240].[Latitude (generated)]</rows>
        <cols>[dataengine.42019.618651678240].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='Sales by Product'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='11'>Monthly Sales by Product Category - States: </run>
            <run fontname='Tableau Semibold' fontsize='11'>&lt;[dataengine.42019.618651678240].[State]&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample - Superstore' name='dataengine.42019.618651678240' />
          </datasources>
          <datasource-dependencies datasource='dataengine.42019.618651678240'>
            <column caption='Order Profitable?' datatype='boolean' name='[Calculation_9060122104947471]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='{fixed [Order ID]:sum([Profit])}&gt;0&#13;&#10;// calculates the profit at the order level' />
              <aliases>
                <alias key='false' value='Unprofitable' />
                <alias key='true' value='Profitable' />
              </aliases>
              <desc>
                <formatted-text>
                  <run>A level of detail expression that calculates profitability for each Order</run>
                </formatted-text>
              </desc>
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Order ID]' role='dimension' type='nominal' />
            <column datatype='integer' default-format='*00000' name='[Postal Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
            <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Calculation_9060122104947471]' derivation='None' name='[none:Calculation_9060122104947471:nk]' pivot='key' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Order Date]' derivation='None' name='[none:Order Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Postal Code]' derivation='None' name='[none:Postal Code:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Month-Trunc' name='[tmn:Order Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Order Date]' derivation='Month-Trunc' name='[tmn:Order Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[dataengine.42019.618651678240].[Action (MONTH(Order Date),Segment)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[tmn:Order Date:ok]' />
              <groupfilter function='level-members' level='[Segment]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[dataengine.42019.618651678240].[Action (Postal Code,State)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Postal Code:ok]' />
              <groupfilter function='level-members' level='[State]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[dataengine.42019.618651678240].[Action (State)]'>
            <groupfilter function='level-members' level='[State]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <sort class='manual' column='[dataengine.42019.618651678240].[none:Calculation_9060122104947471:nk]' direction='ASC'>
            <dictionary>
              <bucket>true</bucket>
              <bucket>false</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <filter class='quantitative' column='[dataengine.42019.618651678240].[none:Order Date:qk]' filter-group='13' included-values='in-range'>
            <min>#2013-01-03#</min>
            <max>#2016-12-30#</max>
          </filter>
          <filter class='categorical' column='[dataengine.42019.618651678240].[none:Region:nk]' filter-group='14'>
            <groupfilter function='level-members' level='[none:Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[dataengine.42019.618651678240].[Action (State)]</column>
            <column>[dataengine.42019.618651678240].[Action (Postal Code,State)]</column>
            <column>[dataengine.42019.618651678240].[Action (MONTH(Order Date),Segment)]</column>
            <column>[dataengine.42019.618651678240].[none:Region:nk]</column>
            <column>[dataengine.42019.618651678240].[none:Order Date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[dataengine.42019.618651678240].[tmn:Order Date:qk]' scope='cols' value='' />
            <format attr='subtitle' class='0' field='[dataengine.42019.618651678240].[tmn:Order Date:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[dataengine.42019.618651678240].[tmn:Order Date:qk]' scope='cols' value='true' />
            <format attr='title' class='0' field='[dataengine.42019.618651678240].[sum:Sales:qk]' scope='rows' value='' />
            <format attr='subtitle' class='0' field='[dataengine.42019.618651678240].[sum:Sales:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[dataengine.42019.618651678240].[sum:Sales:qk]' scope='rows' value='true' />
            <format attr='width' field='[dataengine.42019.618651678240].[sum:Sales:qk]' value='60' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[dataengine.42019.618651678240].[tmn:Order Date:qk]' value='*m/d/yyyy' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[dataengine.42019.618651678240].[none:Category:nk]' value='84' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[dataengine.42019.618651678240].[tmn:Order Date:qk]' value='' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane id='4'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[dataengine.42019.618651678240].[none:Calculation_9060122104947471:nk]' />
              <tooltip column='[dataengine.42019.618651678240].[sum:Profit:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#d3872a' fontname='Tableau Semibold' fontsize='12'>&lt;[dataengine.42019.618651678240].[none:Category:nk]&gt;</run>
                <run fontcolor='#d3872a' fontsize='12'>Æ </run>
                <run fontcolor='#555555' fontsize='12'>- </run>
                <run>&lt;[dataengine.42019.618651678240].[tmn:Order Date:qk]&gt;</run>
                <run fontsize='9'>&#10;&lt;[dataengine.42019.618651678240].[none:Calculation_9060122104947471:nk]&gt; Orders</run>
                <run fontcolor='#787878'>&#10;Sales:&#9;</run>
                <run fontname='Tableau Semibold'>&lt;[dataengine.42019.618651678240].[sum:Sales:qk]&gt;</run>
                <run fontcolor='#787878'>&#10;Profit:&#9;</run>
                <run fontcolor='#1b1b1b' fontname='Tableau Semibold'>&lt;[dataengine.42019.618651678240].[sum:Profit:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.88955801725387573' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([dataengine.42019.618651678240].[none:Category:nk] * [dataengine.42019.618651678240].[sum:Sales:qk])</rows>
        <cols>[dataengine.42019.618651678240].[tmn:Order Date:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Sales by Segment'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='11'>Monthly Sales by Segment - States: </run>
            <run fontname='Tableau Semibold' fontsize='11'>&lt;[dataengine.42019.618651678240].[State]&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample - Superstore' name='dataengine.42019.618651678240' />
          </datasources>
          <datasource-dependencies datasource='dataengine.42019.618651678240'>
            <column caption='Order Profitable?' datatype='boolean' name='[Calculation_9060122104947471]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='{fixed [Order ID]:sum([Profit])}&gt;0&#13;&#10;// calculates the profit at the order level' />
              <aliases>
                <alias key='false' value='Unprofitable' />
                <alias key='true' value='Profitable' />
              </aliases>
              <desc>
                <formatted-text>
                  <run>A level of detail expression that calculates profitability for each Order</run>
                </formatted-text>
              </desc>
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Order ID]' role='dimension' type='nominal' />
            <column datatype='integer' default-format='*00000' name='[Postal Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
            <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Calculation_9060122104947471]' derivation='None' name='[none:Calculation_9060122104947471:nk]' pivot='key' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Order Date]' derivation='None' name='[none:Order Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Postal Code]' derivation='None' name='[none:Postal Code:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Month-Trunc' name='[tmn:Order Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Order Date]' derivation='Month-Trunc' name='[tmn:Order Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[dataengine.42019.618651678240].[Action (MONTH(Order Date),Product Category)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[tmn:Order Date:ok]' />
              <groupfilter function='level-members' level='[none:Category:nk]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[dataengine.42019.618651678240].[Action (Postal Code,State)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Postal Code:ok]' />
              <groupfilter function='level-members' level='[State]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[dataengine.42019.618651678240].[Action (State)]'>
            <groupfilter function='level-members' level='[State]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <sort class='manual' column='[dataengine.42019.618651678240].[none:Calculation_9060122104947471:nk]' direction='ASC'>
            <dictionary>
              <bucket>true</bucket>
              <bucket>false</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <filter class='quantitative' column='[dataengine.42019.618651678240].[none:Order Date:qk]' filter-group='13' included-values='in-range'>
            <min>#2013-01-03#</min>
            <max>#2016-12-30#</max>
          </filter>
          <filter class='categorical' column='[dataengine.42019.618651678240].[none:Region:nk]' filter-group='14'>
            <groupfilter function='level-members' level='[none:Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[dataengine.42019.618651678240].[Action (State)]</column>
            <column>[dataengine.42019.618651678240].[Action (Postal Code,State)]</column>
            <column>[dataengine.42019.618651678240].[Action (MONTH(Order Date),Product Category)]</column>
            <column>[dataengine.42019.618651678240].[none:Order Date:qk]</column>
            <column>[dataengine.42019.618651678240].[none:Region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[dataengine.42019.618651678240].[tmn:Order Date:qk]' scope='cols' value='' />
            <format attr='subtitle' class='0' field='[dataengine.42019.618651678240].[tmn:Order Date:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[dataengine.42019.618651678240].[tmn:Order Date:qk]' scope='cols' value='true' />
            <format attr='title' class='0' field='[dataengine.42019.618651678240].[sum:Sales:qk]' scope='rows' value='' />
            <format attr='subtitle' class='0' field='[dataengine.42019.618651678240].[sum:Sales:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[dataengine.42019.618651678240].[sum:Sales:qk]' scope='rows' value='false' />
            <format attr='width' field='[dataengine.42019.618651678240].[sum:Sales:qk]' value='60' />
            <encoding attr='space' class='0' field='[dataengine.42019.618651678240].[sum:Sales:qk]' field-type='quantitative' range-type='uniform' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[dataengine.42019.618651678240].[tmn:Order Date:qk]' value='*m/d/yyyy' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[dataengine.42019.618651678240].[tmn:Order Date:qk]' value='' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[dataengine.42019.618651678240].[none:Calculation_9060122104947471:nk]' value='' />
          </style-rule>
        </style>
        <panes>
          <pane id='3'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[dataengine.42019.618651678240].[none:Calculation_9060122104947471:nk]' />
              <tooltip column='[dataengine.42019.618651678240].[sum:Profit:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#d3872a' fontname='Tableau Semibold' fontsize='12'>&lt;[dataengine.42019.618651678240].[none:Segment:nk]&gt;</run>
                <run fontcolor='#555555' fontname='Tableau Semibold' fontsize='12'>Æ </run>
                <run fontcolor='#555555' fontsize='12'>- </run>
                <run fontcolor='#555555'>&lt;[dataengine.42019.618651678240].[tmn:Order Date:qk]&gt;</run>
                <run fontsize='9'>&#10;&lt;[dataengine.42019.618651678240].[none:Calculation_9060122104947471:nk]&gt; Orders</run>
                <run fontcolor='#787878'>&#10;Sales:&#9;</run>
                <run fontname='Tableau Semibold'>&lt;[dataengine.42019.618651678240].[sum:Sales:qk]&gt;</run>
                <run fontcolor='#787878'>&#10;Profit:&#9;</run>
                <run fontcolor='#1b1b1b' fontname='Tableau Semibold'>&lt;[dataengine.42019.618651678240].[sum:Profit:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.790607750415802' />
                <format attr='has-stroke' value='false' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([dataengine.42019.618651678240].[none:Segment:nk] * [dataengine.42019.618651678240].[sum:Sales:qk])</rows>
        <cols>[dataengine.42019.618651678240].[tmn:Order Date:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Total Sales'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='18'>Executive Overview - Profitability </run>
            <run fontsize='14'>(&lt;[dataengine.42019.618651678240].[State]&gt;)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample - Superstore' name='dataengine.42019.618651678240' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='New Business Growth' datatype='real' default-format='p0%' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='0.59999999999999998'>
              <calculation class='tableau' formula='0.59999999999999998' />
              <range granularity='0.01' max='1.0' min='0.0' />
            </column>
            <column caption='Churn Rate' datatype='real' default-format='p0.00%' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='0.064000000000000001'>
              <calculation class='tableau' formula='0.064000000000000001' />
              <range granularity='0.001' max='0.25' min='0.0' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='dataengine.42019.618651678240'>
            <column caption='Sales estimate' datatype='real' default-format='c&quot;$&quot;#,##0,.0K;(&quot;$&quot;#,##0,.0K)' name='[Calculation_1641214165608856]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Sales]*(1-[Parameters].[Parameter 2])*(1+[Parameters].[Parameter 1])' />
            </column>
            <column caption='Sales Forecast' datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Calculation_5421109230915137]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Sales]*(1-[Parameters].[Parameter 2])*(1+[Parameters].[Parameter 1])' />
            </column>
            <column caption='Order Profitable?' datatype='boolean' name='[Calculation_9060122104947471]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='{fixed [Order ID]:sum([Profit])}&gt;0&#13;&#10;// calculates the profit at the order level' />
              <aliases>
                <alias key='false' value='Unprofitable' />
                <alias key='true' value='Profitable' />
              </aliases>
              <desc>
                <formatted-text>
                  <run>A level of detail expression that calculates profitability for each Order</run>
                </formatted-text>
              </desc>
            </column>
            <column caption='Sales per Customer' datatype='real' default-format='C1033%' name='[Calculation_9321103144526191]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='Sum([Sales])/countD([Customer Name])' />
            </column>
            <column caption='Profit Ratio' datatype='real' default-format='p0.0%' name='[Calculation_9921103144103743]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Profit])/sum([Sales])' />
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Customer Name]' role='dimension' type='nominal' />
            <column datatype='real' default-format='p0.00%' name='[Discount]' role='measure' type='quantitative' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Order ID]' role='dimension' type='nominal' />
            <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column caption='Units estimate' datatype='real' default-format='n#,##0;-#,##0' name='[Sales est (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='ROUND([Quantity]*(1-[Parameters].[Parameter 2])*(1+[Parameters].[Parameter 1]),0)' scope-isolation='false' />
            </column>
            <column caption='Profit per Order' datatype='real' default-format='C1033%' name='[Sales per Customer (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='Sum([Profit])/countD([Order ID])' />
            </column>
            <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Discount]' derivation='Avg' name='[avg:Discount:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='None' name='[none:Order Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1641214165608856]' derivation='Sum' name='[sum:Calculation_1641214165608856:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_5421109230915137]' derivation='Sum' name='[sum:Calculation_5421109230915137:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Quantity]' derivation='Sum' name='[sum:Quantity:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales est (copy)]' derivation='Sum' name='[sum:Sales est (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Month-Trunc' name='[tmn:Order Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_9321103144526191]' derivation='User' name='[usr:Calculation_9321103144526191:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_9921103144103743]' derivation='User' name='[usr:Calculation_9921103144103743:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales per Customer (copy)]' derivation='User' name='[usr:Sales per Customer (copy):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[dataengine.42019.618651678240].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[dataengine.42019.618651678240].[sum:Sales:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[dataengine.42019.618651678240].[sum:Profit:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[dataengine.42019.618651678240].[usr:Calculation_9921103144103743:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[dataengine.42019.618651678240].[usr:Sales per Customer (copy):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[dataengine.42019.618651678240].[usr:Calculation_9321103144526191:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[dataengine.42019.618651678240].[avg:Discount:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[dataengine.42019.618651678240].[sum:Quantity:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[dataengine.42019.618651678240].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[dataengine.42019.618651678240].[sum:Sales:qk]&quot;</bucket>
              <bucket>&quot;[dataengine.42019.618651678240].[sum:Profit:qk]&quot;</bucket>
              <bucket>&quot;[dataengine.42019.618651678240].[usr:Calculation_9921103144103743:qk]&quot;</bucket>
              <bucket>&quot;[dataengine.42019.618651678240].[usr:Sales per Customer (copy):qk]&quot;</bucket>
              <bucket>&quot;[dataengine.42019.618651678240].[usr:Calculation_9321103144526191:qk]&quot;</bucket>
              <bucket>&quot;[dataengine.42019.618651678240].[avg:Discount:qk]&quot;</bucket>
              <bucket>&quot;[dataengine.42019.618651678240].[sum:Calculation_5421109230915137:qk]&quot;</bucket>
              <bucket>&quot;[dataengine.42019.618651678240].[sum:Calculation_1641214165608856:qk]&quot;</bucket>
              <bucket>&quot;[dataengine.42019.618651678240].[sum:Quantity:qk]&quot;</bucket>
              <bucket>&quot;[dataengine.42019.618651678240].[sum:Sales est (copy):qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[dataengine.42019.618651678240].[Action (Order Profitable?,Category,MONTH(Order Date))]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_9060122104947471]' />
              <groupfilter function='level-members' level='[Category]' />
              <groupfilter function='level-members' level='[tmn:Order Date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[dataengine.42019.618651678240].[Action (Order Profitable?,MONTH(Order Date),Segment)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_9060122104947471]' />
              <groupfilter function='level-members' level='[tmn:Order Date:ok]' />
              <groupfilter function='level-members' level='[Segment]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[dataengine.42019.618651678240].[Action (State)]'>
            <groupfilter function='level-members' level='[State]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[dataengine.42019.618651678240].[none:Order Date:qk]' filter-group='13' included-values='in-range'>
            <min>#2013-01-03#</min>
            <max>#2016-12-30#</max>
          </filter>
          <filter class='categorical' column='[dataengine.42019.618651678240].[none:Region:nk]' filter-group='14'>
            <groupfilter function='level-members' level='[none:Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[dataengine.42019.618651678240].[none:Region:nk]</column>
            <column>[dataengine.42019.618651678240].[Action (State)]</column>
            <column>[dataengine.42019.618651678240].[Action (Order Profitable?,MONTH(Order Date),Segment)]</column>
            <column>[dataengine.42019.618651678240].[:Measure Names]</column>
            <column>[dataengine.42019.618651678240].[Action (Order Profitable?,Category,MONTH(Order Date))]</column>
            <column>[dataengine.42019.618651678240].[none:Order Date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-align' value='center' />
            <format attr='font-weight' value='bold' />
            <format attr='font-size' value='12' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[dataengine.42019.618651678240].[:Measure Names]' value='23' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-align' value='center' />
            <format attr='font-size' field='[dataengine.42019.618651678240].[:Measure Names]' value='8' />
            <format attr='font-family' field='[dataengine.42019.618651678240].[:Measure Names]' value='Tableau Regular' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='line-pattern' scope='cols' value='none' />
            <format attr='line-pattern' scope='rows' value='none' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[dataengine.42019.618651678240].[Multiple Values]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run bold='false' fontname='Tableau Medium'>&lt;</run>
                <run bold='false' fontname='Tableau Medium'>[dataengine.42019.618651678240].[Multiple Values]</run>
                <run bold='false' fontname='Tableau Medium'>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[dataengine.42019.618651678240].[:Measure Names]</cols>
        <tooltip-style tooltip-mode='none' />
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Overview'>
      <layout-options export-center-horz='true' export-center-vert='true' export-orientation='landscape'>
        <title>
          <formatted-text>
            <run>Executive Overview - Profitability</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
        <style-rule element='dash-subtitle'>
          <format attr='font-size' value='10' />
        </style-rule>
        <style-rule element='dash-container'>
          <format attr='background-color' id='dash-zone_18' value='#f7f7f7' />
          <format attr='border-style' id='dash-zone_18' value='solid' />
          <format attr='border-color' id='dash-zone_18' value='#d7d7d7' />
        </style-rule>
      </style>
      <size minheight='620' minwidth='1000' />
      <datasources>
        <datasource caption='Sample - Superstore' name='dataengine.42019.618651678240' />
      </datasources>
      <datasource-dependencies datasource='dataengine.42019.618651678240'>
        <column caption='Profit Ratio' datatype='real' default-format='p0.0%' name='[Calculation_9921103144103743]' role='measure' type='quantitative'>
          <calculation class='tableau' formula='sum([Profit])/sum([Sales])' />
        </column>
        <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
        <column datatype='string' name='[Region]' role='dimension' type='nominal' />
        <column-instance column='[Order Date]' derivation='None' name='[none:Order Date:qk]' pivot='key' type='quantitative' />
        <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
        <column-instance column='[Calculation_9921103144103743]' derivation='User' name='[usr:Calculation_9921103144103743:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='12' param='vert' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='17096' id='32' name='Total Sales' w='100000' x='0' y='0'>
              <layout-cache type-h='fixed' type-w='fixed' />
            </zone>
            <zone fixed-size='352' h='56774' id='26' is-fixed='true' param='horz' type='layout-flow' w='100000' x='0' y='17096'>
              <zone h='56774' id='1' name='Sale Map' show-title='false' w='82840' x='0' y='17096'>
                <layout-cache minheight='201' minwidth='201' type-h='scalable' type-w='scalable' />
              </zone>
              <zone fixed-size='197' h='56774' id='18' is-fixed='true' param='vert' type='layout-flow' w='17160' x='82840' y='17096'>
                <zone h='10000' id='17' mode='dropdown' name='Sale Map' param='[dataengine.42019.618651678240].[none:Region:nk]' type='filter' w='16464' x='83014' y='17419' />
                <zone h='12742' id='16' name='Sale Map' param='[dataengine.42019.618651678240].[none:Order Date:qk]' show-null-ctrls='false' type='filter' w='16464' x='83014' y='27419' />
                <zone h='12742' id='24' name='Sale Map' param='[dataengine.42019.618651678240].[usr:Calculation_9921103144103743:qk]' show-domain='false' show-null-ctrls='false' type='filter' w='16464' x='83014' y='40161' />
                <zone h='10484' id='27' name='Sale Map' pane-specification-id='2' param='[dataengine.42019.618651678240].[usr:Calculation_9921103144103743:qk]' type='color' w='16464' x='83014' y='52903' />
                <zone h='7742' id='23' name='Sales by Segment' pane-specification-id='3' param='[dataengine.42019.618651678240].[none:Calculation_9060122104947471:nk]' show-title='false' type='color' w='16464' x='83014' y='63387' />
              </zone>
            </zone>
            <zone h='26130' id='22' param='horz' type='layout-flow' w='100000' x='0' y='73870'>
              <zone h='26130' id='8' name='Sales by Segment' w='49825' x='0' y='73870'>
                <layout-cache minheight='367' minwidth='242' type-h='scalable' type-w='scalable' />
              </zone>
              <zone h='26130' id='10' name='Sales by Product' w='49826' x='49825' y='73870'>
                <layout-cache minheight='367' minwidth='246' type-h='scalable' type-w='scalable' />
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout name='Phone'>
          <layout-options export-center-horz='true' export-center-vert='true' export-orientation='landscape'>
            <title>
              <formatted-text>
                <run fontsize='11'>Executive Overview - Profitability</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='320' minheight='320' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='100000' id='36' param='vert' type='layout-flow' w='100000' x='0' y='0'>
                <zone h='10313' id='33' type='title' w='100000' x='0' y='0' />
                <zone h='89687' id='12' param='vert' type='layout-flow' w='100000' x='0' y='10313'>
                  <zone fixed-size='386' h='89687' id='26' is-fixed='true' param='horz' type='layout-flow' w='100000' x='0' y='10313'>
                    <zone h='89687' id='1' name='Sale Map' show-title='false' w='72714' x='0' y='10313'>
                      <layout-cache minheight='201' minwidth='201' type-h='scalable' type-w='scalable' />
                    </zone>
                    <zone fixed-size='182' h='89687' id='18' is-fixed='true' param='vert' type='layout-flow' w='27286' x='72714' y='10313'>
                      <zone h='19375' id='17' mode='dropdown' name='Sale Map' param='[dataengine.42019.618651678240].[none:Region:nk]' type='filter' w='26086' x='73014' y='10938' />
                      <zone h='23749' id='16' name='Sale Map' param='[dataengine.42019.618651678240].[none:Order Date:qk]' show-null-ctrls='false' type='filter' w='26086' x='73014' y='30313' />
                      <zone h='23749' id='24' name='Sale Map' param='[dataengine.42019.618651678240].[usr:Calculation_9921103144103743:qk]' type='filter' w='26086' x='73014' y='54062' />
                      <zone h='20314' id='27' name='Sale Map' pane-specification-id='2' param='[dataengine.42019.618651678240].[usr:Calculation_9921103144103743:qk]' type='color' w='26086' x='73014' y='77811' />
                    </zone>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='dashboard' maximized='true' name='Overview'>
      <viewpoints>
        <viewpoint name='Sale Map'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[dataengine.42019.618651678240].[usr:Calculation_9921103144103743:qk]</field>
              <field>[excel-direct.41946.598980972223].[sum:Sales:qk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Sales by Product'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sales by Segment'>
          <zoom type='entire-view' />
          <highlight field='[dataengine.42019.618651678240].[none:Calculation_9060122104947471:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Total Sales'>
          <zoom type='fit-width' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <device-preview>
        <device is-portrait='false' name='iPhone 6' type='Phone' />
      </device-preview>
    </window>
    <window class='worksheet' name='Total Sales'>
      <cards>
        <edge name='left'>
          <strip size='275'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='8'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[dataengine.42019.618651678240].[:Measure Names]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Sale Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='2' param='[dataengine.42019.618651678240].[usr:Calculation_9921103144103743:qk]' type='color' />
            <card pane-specification-id='2' param='[dataengine.42019.618651678240].[sum:Sales:qk]' type='size' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[dataengine.42019.618651678240].[none:Postal Code:ok]</field>
            <field>[dataengine.42019.618651678240].[usr:Calculation_9921103144103743:qk]</field>
            <field>[excel-direct.41946.598980972223].[none:OrderDate:ok]</field>
            <field>[excel-direct.41946.598980972223].[none:OrderDate:qk]</field>
            <field>[excel-direct.41946.598980972223].[none:PostalCode:ok]</field>
            <field>[excel-direct.41946.598980972223].[none:Region:nk]</field>
            <field>[excel-direct.41946.598980972223].[sum:Sales:qk]</field>
            <field>[excel-direct.41946.598980972223].[yr:OrderDate:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Sales by Segment'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='3' param='[dataengine.42019.618651678240].[none:Calculation_9060122104947471:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[dataengine.42019.618651678240].[none:Calculation_9060122104947471:nk]</field>
            <field>[dataengine.42019.618651678240].[none:Order Date:qk]</field>
            <field>[dataengine.42019.618651678240].[yr:Order Date:ok]</field>
            <field>[excel-direct.41946.598980972223].[none:Segment:nk]</field>
            <field>[excel-direct.41946.598980972223].[none:State:nk]</field>
            <field>[excel-direct.41946.598980972223].[usr:Calculation_0561103150105895:nk]</field>
            <field>[excel-direct.41946.598980972223].[yr:OrderDate:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Sales by Product'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='4' param='[dataengine.42019.618651678240].[none:Calculation_9060122104947471:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[dataengine.42019.618651678240].[none:Calculation_9060122104947471:nk]</field>
            <field>[excel-direct.41946.598980972223].[none:Calculation_0351103145857149:nk]</field>
            <field>[excel-direct.41946.598980972223].[none:ProductCategory:nk]</field>
            <field>[excel-direct.41946.598980972223].[none:Segment:nk]</field>
            <field>[excel-direct.41946.598980972223].[usr:Calculation_0561103150105895:nk]</field>
            <field>[excel-direct.41946.598980972223].[yr:OrderDate:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Overview' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sale Map' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7EAAAOxAGVKw4b
      AAAgAElEQVR4nOy9aawlyXUm9kXmzcy7r2+vV3tX9VJkd7O7SXETxUWUOBSl0UiUNZJsw7CN
      GRgwNIB/jA0IBmQYsAYD/zRswIZsCNLIskdDaqyFw13cyV6r2HtVdVW/evX29+6+5B7+kTey
      4saLyMxXVaTqsfsAF/fezNjjnBPnnDhxgnQ6HWqaJu43+L6PbreLYrEIQsh9L/8oQCkFgJ94
      OzzPg2macX0/zTb5vo9cLndf6ySEZOrLUYFSCkopNE3LnIcQgnw+DwAIwxCO4yjTmqYJXdfj
      uhzHietkfWfjlTNNE8Vi8R66IwdKKWzbxsbGBk6dOgVd1+PB7Pf7qFarcWOCIMDBwQHm5+el
      5bB07DttUtjEqQY6DQFYnSLCiPWKaQgh8H0fpmnG/7MgkNiepDyqtoRhGBOArH+ytrPnYRge
      CRlZfhVBydpPCEEYhvE3pTRub5YxyuVyKBQKAIDhcDhD7GL9hmHAsiwQQhAEATRNg+u6M7jA
      xiuZZdwlUEqxu7uLQqGAhYUFHBwcIJfLgRACwzCwv78P27aRz+dRq9UARETRbDZjyh2NRiiV
      SvFAywaZf8b/5yc0y+SwvCqEZc/4d3xa9q3rOnRdh23bsCxLWT/fJ55Q+bQMUWT1qcYhieBE
      hOXzpSE/jzisrbL6xfci45LNT1KdfDuDIEAQBJmImy+bJzw+LWvnfSEASil2dnZQLpcxGo0w
      Go3gui5u376NCxcuoFarYWNjA+PxGI7jgBCCTqcDy7JgWRZ834emaTHyd7tdjMdjlEqlmY7w
      v5O4smyy+bberQigQjC+LfyqJookIsGkcT5N01IROm11E1coHhhiZBkPHol4YhDHhHFcVZlp
      4yc+55mE67ooFAoolUqwbRuu60r7zPeJEAJd1xEEgbTO+7YC1Ot1uK6L4XCIubk5ANGg7e7u
      olgsYnl5Gb7vg1KKra0tWJaF7e1tbG9vIwgC5PN5DIdDVCoVAIiJIQuIHAZQI7qM8xxFDmcT
      wrizONgAkM/n4fs+PM+DYRgzSMIjnYx7yyYzbVVKar9q9cySV2xHUh2MWNm8pZV71PeUUvi+
      H8vuhUIBYRgeQmw+L5snRiiydEcT/BIam8/nUalUYjl4NBphfX0d4/EYlFKsra3h6tWrGI1G
      6HQ62NzcjKlzcXERruvCNE2EYYjhcBjLcLLBEIFHLpk4wadLm0hZ38TfjMMlcU/DMBAEQayA
      MeC5YxZkF0UOWZuT8qjax8ZeJr6IK6aYT/wtEwdVdbL+yxA3rW+UUnieF5elMrCwZ77vzyC/
      bLzvqw5ACMHJkydx8+ZNDAYDWJYFz/NQKpVQLpfh+z4cx0G9XgeAeBm7desWAODmzZsxB1le
      Xka320W/38fq6mrikqoaBMYBGIdKIigV4agQQIYILD3j8kwZZvoOz5l4rikrX/ZfJLgsHDwJ
      QVSQJKMfZdVQga7rSq7Mly8zgPi+H6fVNA2GYcREwYCJYYz7q0Qs4D6KQAwMw8CFCxfw2muv
      YWFhAZ7nxZNtGAZyuRzK5XKs0AyHQwwGA3ieh16vh1wuB13X4xViaWkpUWESB0gmlx51mU9S
      tERuJ0NYUQFnFrA0QgUOi2gsHy9ysef3AxnFtrA28LJ3mjzPvpNkf1k9R30H3FnlRX2EB9d1
      kcvllEQ20+bU1t4FEEJw4sQJ7O/vx5PLGs6nIYSgWq3ixIkTOH36NOr1OnRdh+/7aLfbCMMQ
      hmGAUorBYIDRaJSqOIogE1fEZTVNXEjqJyuDF79EME0z5lIyRGbt5EUScbxYHhEpk8Qf2TtW
      rqx8MS9PzHx5Yj+Txo2vJ02cywKapiEIAoRhCM/zDomYlFIEQYDJZDJjReNhRiS9p9YkgOM4
      sCwL/X4fW1tbuHHjxiHKFQeuXC6DUgrLsmKxCUBMCJubm0rZUeTQMuWUB9nEJCEODzxBqbi6
      iKAqbqoqJy2f7LlIXGI5SfUl9UuU9UWmIRKKWKbYDhVi8unEfvBtmkwmGA6HmEwmcVv4+WTE
      kbaSAz8BEYjB4uJi3Ji1tTWUy2V0u13ouj6zCcZ3sNlswrZtnDhxIt47ACJi2dvbm9knSAKe
      CETgJ0CmxKnSptmt05RrNoEit0pSUnlEUekLqraL9QN3ZPujik5Mp+HFy7sVve5GZ8nSPn5+
      kszHYtt/YisA35jTp0/DNE3s7+9jd3cXvV5vRplhQAhBo9HAeDzG6dOn4TgOxuMxxuMx+v3+
      TCfE76QlWeRamqYdktNl3I9xNj5tkpVExeHFdHx6mSgi1q1CcpFIkhT4JC4t5klT/EU9JEm0
      UbVbrI9PJ64QafPJi46qbwai5PETWwHESpeXl9Hv91GpVLC5uQnP86DrOur1+kxjC4UC9vf3
      0ev1YNs2er1e3GjbtjEYDJDP5+G6LvL5/CFTXpLYI6ZR/U/TCbLqDKrlP01ZFBFEZpWREYWY
      T6X3ZFVqZWMpEw8Zx+VXCJZPtmKkEY1qF19Wvyydqr3imGma9pNfAfjKz507B9/3USwWlXIt
      EG0kHRwczCjGc3NzsG0bjuNgMplgb28v83J5VMVLphOIcq+qj6rnTHcRt+n58lWgEltUuoOI
      /Ox5lrqygAzBk9Kp8ialy1L/UdOzb+YrZJrmT48AgMgacurUKeRyuRgRZJadcrkM27axv7+P
      arUK3/fRarVgWRYMw8DGxkYsHgyHw0RFEThsakzjQCLnFCdapUTydfK/KaXx7rCqPhWk6Smq
      NoifJDFCJkIeZQXl88j6L1uhVeXw+WTtZflkDCpLexneMEsSGY1G9CfhDaoCSina7TYmkwm2
      t7fh+z4ajQaWlpZmGkwpxXA4hO/7MAwD8/PzyOVyGA6H2NnZgeu6KJVKcF03VrhVSua9KG33
      kpflZ+A4TuzSe7flyMQcSmnsin1URzMG99JHsY08qMplO/8y8ShN9FG9T+sDpTTeZ3rzzTdh
      muZPRwfggRCCVquFMAxhmiauXbuG/f19FAqF2DMUAHZ2drC4uAhCCCaTCW7cuIFKpYK5uTmc
      PXsWo9EIhJDYy/Q4gK7rsUn3freZbTQeJ/hJnEPJCpZl4cyZMz99AmCgaRrm5+eh6zpu3LgR
      u02wpZTZeIFIJ5ifn8f29jZKpRJKpRIopZhMJjAM49BA3quMK5Z1P5GVUorxeHzkyU+yJgFQ
      ilcPKvi+/w/KuNg4/oMRAHBnNSiVStjc3IRt2zBNE+PxOD4cwxBQ13WUSqV4l++1115DvV5H
      LpdDEFK8eHMPOY3gfecW8NMYVpEwmEkyi8wuM6eK78V6RBFIJrOrRBC+rUdlDmkWoLS8svaL
      7ZHpBVnKVrUpi3LOvI5/6jqACpiCure3B9/3411gBqxDvu/Habe3t3Hx4kV86bsv4EfdqEOf
      Wpzgw0+958gnnI4KzNWZBybX3i+4HzrMTxqCIIhl6wcBHMeJnRCzwIPRatwxD5ZKpfjEWLFY
      jL364iVr6uS0t7eHcrmM8XiMerkAve2BIEStUlRuLt1PYId4eGCnlkR4kBFYBJWpV9UH5uf1
      oPSPWXfSgJBoY/CBIQAG5XI5JgLf96HresxpGdIxx7JKpYIwDPHY2ROoWFswjQJOnlieIYCs
      EyPuqCaZ6NhKJLpliATA2iC6ICSJAHwb+DLE5/cKvAmR9VeFyOwdpXTmbDfrm1iWrI6kza2s
      bU3Lz89LFpN1Lpf76e4DZAVCCCqVCnZ2dtDpdDCZTBAEAXRdh6ZpME0TpVIJo9EImqah1+uh
      Wiri1OqKFHGyrAZsoLJM0FEnUeZ2IStLtoF1N5C2zyFuDIltEfOzdrHVOGv9rMysbtJJIO7h
      pEHaODJieeBWAAaERGcBHMdBu91GEASwLAvVahWapsX+QpErhIbbWzu4sb6FerWMc6dPxm7U
      vF1cpUhmsUPz7bpbUHH+pFVBtbmX1qa0fjBESjsimrW/sjbziqjsYPpRxjLJEKBSeJPGgD1/
      IAmAUhqf6qlWq3HYlvF4jIODA+i6jtXVVXiehy9/+0f46ku3MAhMBNCQh4el8qv4jV94EhfO
      nZopU7UjysP9lGWzEBaPLKzPaWWmccAsK4kMyflnPMfly1L1QXzO+zzxot/d6EOiiCb+ZmmS
      HANV8MCKQGwnmEVXyOVyqFQqOHHiBBYWFhCGIb70rWfxhee3seVXMaYWijmKajWPq4Mi/q+v
      XMYb198+skiRNf1Rlews4kiSHC7LJxN1eCRIamOaKHEUkVDMB8xGjsgijx+lbJl4K64GWVeZ
      B5IAgGjzy3Gc+GC553mxyY0QgrXbm/j713YwpHlooKhrI2hOH06/gxAatt0SvvCtH6M/GCQO
      xlHl0ySk4U+Fpdn4VZxUlLNFRGdiHUsvliM+4/PwURT4MDR829NARnhZ84m/ZX2TvUuKwCH2
      nXkKZ4UHlgA0TUOj0UC/3485YxAEcWiM16+voeNZAAgM+HBpDgOaRxCEIKAIoWFnrOHya9fi
      MkXkkCGPCiiNdp6//qMf48obb0nTWpYF27aliKGS02WgaiOPvDyHFtOzj6x+mQgoE0uSyle1
      ma8jDVmPAuIBF1nbeNHoKMaEB5YACCGo1WrS5ZNSit5wgmDafBc5GCRAWfdh2w4IjTiGBx17
      7V6cv9fvzwxkEASwbTt+Px6P4bqzEQZ4uP72Op7vV/Dt621lPBr+/K/47ijKNp+OtfkosZJY
      nUltENOktYfpZmnAuLaMwH1Bz2FpXNfFcDTCeDKJ341GYwRhiP5gAD8I0O/30e/3MR6PAWB6
      JtiFWE1WaxXwABMAEE2IZVnxoPMEUClY0DHltCCYOC4K4QjFHIWlTxEGIQjRMBpFsYmYK8Vw
      NII/3TDZP2jHCFssFhHSSFQYDIaH2nN6dRkXzA6eXCkil8ulLv18e1WiEc+pecSRybEswgb/
      LKl8kQPz4gSfV/ZbTMPe8SbdrJydiXYA0OtFDCkMQwScSJbL5WCZJobDaNx7/T56/T62traR
      z+eR03UUi0UUi0UMRxEB7B0coNvr4fbGxkxduVwuLlc17rEVLFMP/gGBj/vCT8JDZ1ZQ0R0A
      FAXY2N45ACFAtVaGTkIQhLCIj6W5JgiJBkbXNNhTfSI35aaVcgn9wSAeMF3TsH/QRqk06x5C
      CEG1UsGv//yT+Oj7HlMii67r0hUgi7WJIYrMovKtZ1/Gv/6Tv8Nfff1HsJ30cB+yenhETGqH
      DI5iYVERaa/XQ3nqyDgejzEejeI9Hk3T0O8PYoZQrVRQrVbgui6MqccvM4awPiwvLsJ1HRQK
      sy7mfChElTLP/j+QZlAeqtUqbt26dciP/vzZ03j/6TV884aDABp0XcNud4JGSDDRa6gQG4uV
      HJ587HwcY7Tb68E0TDSmgbkIiYL1Mjfs8WQC13HQajYAyHc2s0x+sViEbdvI5XJS12eZ/VpW
      F6WRnX579wB//KWX8NaejR9e3cfp5Raefs/FRNk9aaWRtTmtX0e1pIn93NndRblcjueR9/Ui
      hOCg3Ua5XIKm6xgMhiAageM4OHXyJADAcVwMR9Hq4PsRg9nb30ejXkd+GjVa1lZex5E9f+AJ
      IJfLwbKsmU5E4RNHsM0yLtQHuN0nKCwvIA8HAxRR0WwsFAl+59Pvnwn9zhCfL5t34ioWCigW
      CkqLRRbTIHtfKBRg2/aMtUWcAL5cmVysqicMAnR7PTQbDXS7XeQLBZhTdxFKKW5vbqJSLqOQ
      z8eHTgbDIapT1xGxP3zbVcArolmsPjxQSrG4sKC0joVhiLlWK35v1apRvmmYHACwLBOW1Yzb
      ycrkI1ao+iAbd/b8gScAIFKQ2u02Go1GHFIlmkAdTz16Fp8wNbz4+k0MJjnkcgFOL7fw8Q88
      jlq1kjipqjAhqgET36VxRcuy4DhOoqk1S7DepYUW/ovPPoXvXXkLj55ZxMp8A0EQwnU9VCoV
      UEoxGo2Ry+lwXBfW1KU8b+UjxXI8xmg8RhAEaNTrqVEXVO1JWkWSgOfC/AbWnXmcfc6bP2Xj
      k7RqAkAYUgRBqHzP9+uBcYdOgv39faytrWFlZSU+DAMA44kN0zCQy0XOTyzSRNYIxWyAkkQA
      lSmTBf5KgyAI4rDerLzLr7+Fse3iw+97NLNoQSmNj4cetDuYn7vDMXv9PsIwRGMaYWM8HmNz
      extnTp2CpmmwbRthGMaiYNoKk9YOfvWQuUOrTKsiiJxb9ptPm9YuBq9evYkfXLmKX/7Ikzi5
      snhIJOPLfOCVYCDy+iwUCjORwACgWMhD1+90gV2NkySmqKwC4juZxYQHnlPxHEkUn9hRRd7c
      Wi8X0agW4zRZ28EsT7qmYXdvD0BkLclbFupTPWYymcDzfZw/ezbmnpOpa7msfUn1MhBDW2YR
      ndKe8b/FsJIi00lCftlcmqYRhdgMQuVcxqvacVgBgiDAK6+8AsuysLS0FC+Zd2PRSFMOh6MR
      zOkxS5mczIAdvJCVIeM4LFwfgEMrh6x8z/OxtrGN0ycWZ2IfyTirqp0iR83CWWVKY9LOs2oF
      SOufqs6j5JPVxYCt0KKYK5Z5LFYA4E58UIb0SdHa0kDG+QBgY2sbf/yN1/H/fPPFOHp1mmiU
      xFH5Z7quSyNC8IjNf/rDEb7z0lX0BiNpG2QEl+TOIK5YstUtKW8aJxbLEYk/bX5kBJcVZPPJ
      yhL3LcSz08dCCaaUwjCM2M+DnQsQPQKzcB5ZevbfcVx4uQImwSi+RC1pxeAHWlTgxDZQGl3x
      I3J/FWI061X89mc+hDyXXqxP9Uxsq6w9PLKlcV6Z+TCrxUjWVpWsz9oiuq/L2sQ/l82/YRjx
      Ks1LCrbjwB+NUK/V4Hne8VgBNE1DpVJBr9fD/v4+2u02bNvGl793Bbc2dwDIESINRGQ4e/ok
      fvvxBn7rwxcTQ4wQQuAHAf72759Ftz/IXBfjPuKkiSIG+xQLhSNZaEQuzcoWZXcxrUzmTqr3
      bkQVHlSILSPuowBrt+oGH0IICO7EEjUM43isAJqmoVarIQgCNJvN2CIyVy+imLcOdfKoA8fn
      XVlaBKU0lm3V8rV6gsIwPHQsD8Chg+MqWT4pjQhZuHESHBV5ZflkImiSpUn2TOT+99I2lXjq
      OA4mto2cYcCbXuN1LJRgIIoAwe+ssgFjkRhUogkD1WAy5ZTl5aNBq4CXo/m7zPh3MqK0bRsF
      YaONz5fEldNEjzSuyYsfKoVZZB5Jugd7x+7hEh31spYnlqsCcYVPK4sQEl/PxT+L2hxA0x7Q
      Q/FJIMaAZ9/i1ZwiIokIpGlafLMIISQOlydyDpVszdJ4nndIrpchP1+m6tSXSEQi8LL67n4b
      ruthlbNxy9rH3r3w6nWU8iYeOX8qkYBYvUnhFWWMxTRNZViUJKaUVVzl51ClH8j0CvHSxDvz
      fYdYjw0BUBpdk8T8dliHhhMbX/7+ZczXSnji4hk06rVDF6PJLkzgLUoMjiJ7solnG128SVSV
      nhEfO9zDVg8eEXhLDT/ZfFtfu34L/dEEqyuLie0TQTUWWfLeK6TJ90mrjTg+/LeMqADEFxOm
      tuu4iEBbW1vwPC8mAEopBsMRvvPD53DdqcLRi6iON/A7n/4AqpVZFwhRJk+CJPFJJucyfcHg
      fHH4PHwZ4/E49g1iyMiLDlk4IiEkjn3DrFQy5ZdPL4tYl4RwYr/FNHwZrC2qexpEJM7CZPgV
      W2yH63p49epNXLp4FqapNlQwAhCJXqz/WFiBAMTyNg9vXr+Bc7f/Hd7X/TKgR+aunH44WK64
      Z5BlV1NlDeH/a5o2w/1VJkX2rFAoxA54LBYqX6bMWiMDXddjkUO2cojIxVtFxD6IcBQDwlEU
      37R6ZWllPlQT28Eb63uwHQfAnV1qloel53ffxXczz47LCrC5uYlCoTAjCji2jTe/8wVc7efQ
      bzyGTz2ygNMrC9L8aUuviLyiXMny8tyTHdPkuT/PcZIUN2aVYEQtyt2qOpOUZB6yKIsiHEUs
      YcAHzJLlTVoBjrLa8vWzFUcGor7HxlgmaoZheLx0AJGTE43gkV/4PJYGI1imgWr5sMbP/qcB
      mxyegyZNEIA4WJdYBp+Or1ssl23WWJYlVTrFjT6+DDHeUZryLT7jiUZUIJOYRdqYiJC0KmRZ
      kWRlZb0okb+6ieUXV/BjQwDMNYFBv72Pq3/8h8g/8kFc+pXfhTYdFNkEihOvgjQRRPzP3DNE
      UCGaCLwli3FSUfGVcXbmYs3qEvuV5Luj6q9KRk7iyEwHYKe0ZKtOlt8ykLVDXCVVRC+WIwvL
      yH4fCwKQ+ZLoOQNabR5GuQakiAsM0gZdxf3EfGz55JE1SbkUkVMUddjpMRHhkwhH5Ygn9l+1
      AsjSi+lkOo1YviiDy0A2PrKVQSXGsd9ZnR9lK7kqz7HQAXzfx8bGBurciS7GfdhvlXkviQOz
      9wxkIoFKDs5qZssCYRjGZwZUSMDiI7G7xrKEYZdxyDTdQVYGS8uXyX/zRC0bM8/3oZFZFwXX
      82BOw1fG86hpoFOiCykF6PQMhGmCTomMiT++H8AwctI28u10HGfmHLHYtmOxAlBK42BH/KSK
      ps205T5J5uRXj7SVwvf9Q1YYvhy+Ppk+wtdDCIkjYPMRp9k9CDwBFItFTCYTqXWE53hJp6gY
      pMnfKsJI4roycF0XW9s7MM3oZsZSsYhOrwdQijCkWFpcmJ7FdgECtJrNOFKH53s4tboanXHw
      fARhAFCgWq1ge2c7via32WhI62b9SNrZPxZmUFm4c37C2X/+m/12XQe+7ymRXgZpXJHJvXw7
      xPYkiWE8kfFI6/v+NDaRG1s62C4rW6XZ+WhZe2XlytojI0ix/Qz4+J6yOmUKOF+eYRgolYoo
      5AuRGdgwMN9qYXFhAfmpH1e5VILjOigWoj4WiwXouhZ7whYKBVSrlWh/R4vErrm5OQyHoxlX
      B5lol8Ygj8UKEARB3FEg6siw38X2la+DmAWcfPKTMMzDxxNde4JX//R/BrEKuPTb/zUMKxJZ
      VJxehrQqvYBfBVga3/dnLBW8tYIp8ZRGh0dGozGKxcJUBAih61p835kog/PtYa7gIqT1KYsB
      QCYuqVaVJJFHZFatZhN7+/uoViuxwn/QbsfHRA/abTSbTQyHQ+g5HZ7rgRANpWLkDTscDuF6
      3ozD3KjfR6NRBxRWnqxzeSwIQLxdnVKK7W/+73j44KsIQXDdHeHcRz8/Iy5Efjoe9HIdxCqA
      kDucbDSNLDYYDqND4lNbvribKwNKaRz9TRRl/CDAaDSKryxtNZvxZNdqNeR0HRtbW8hbeRAC
      FAr5OABUvVZDpVyemTjV0i3juvw79n03VhdZeSoRTlQ02dj//bMv4/GHT6NVr8XP51qtmb41
      Gg3oU72t2WhA0+5wfFIkqOb0uI5isYiCQFSN6QXqvJjI9z8LUHoMwqIAh02gQRAi3H8Lmkah
      gYJ21uJ3kRgxwfbODur1Gh77/D+H63ow2OASEosRxXwBBFEgXj8I4PsBHCc6P8ssHCqOyoBH
      hrxlwbYd6LqOei3ySWp3utA0AtMwYDsO5lst7B0cYHF+PqojCFHIF6LDGZKIyjw3VYkpMrEm
      iy7D9+eoMr8KKKXRWdxQbRIlhEBPEMlyU+Rn1iWZziMGPsjSTnEDjZBjciieiRsMASa2jSvl
      j+EGPYE182FUn/rNOC0hBI7rYmFhHuVyGYZpwZ7K1HsHBxEHNwxYphlbEbSp9aHdaceytshV
      xMhoMrk7pBSTyRi1ahTXxjRNLC8txoNuGgYmto3yVJzzfR/5vAWAolAowJ+eQeDr4csXZXyZ
      3iOmYyBLz/qlikat0il45f4w8ubwSx95H+ZbjVR9Q6VXiP0Q07N2i6KWOF78O+DOSTW+rGNh
      Br158yZM04wvzaOUYmNnHzlCUauUUeDaT6fWhcFwgGKxCMs0sT+9VKNSLkPXdXS6PVAawvcD
      tJoN2LaNIAxnRBCVFYf9dhwHhGhY29pFpWBhbWMHjz9yHqZpHLLzMxfo6JANYsJjwPsTiZPK
      A3snC8mSxgEZ0qSddUgCHhkZojECYhY5leyt6gufXqW4p7VdRuxhGAKEwJ+Ko7L5JOSYBMbS
      NA2lUmmm4SeXI58fUQaMlks6EwWORR1j0GzMRogrl8vqsBkJiDW2bVy+dht7u/u40Q5QqxTx
      8PkzcbsYsTLFT7wxhQGboDSQyd1pbeRBtOiI+bMoyuLKqFoZRFD5OqWl49ueFYIwxJe/+xJs
      18evffzpQ6soDw88ATiOg36/j1qtJh00XlbnJ0O1i6kCFcdNQohapYxf/eiT+PGbN/Ck7+Hs
      qRPxO5XVhK8rqT38wRlxBUojzqRbZrIcyBEJTfVOJR7J6kuLwMeAZxZpTEH1PvADrO0OMHI8
      eFPrkQoeeBFobW0Nnudhbm4u0SrCvmXKoApUSzaQHi2BiSGq5V1FrLJ2i2mSEIoQgslkMhPz
      hk/H52WIqnN+UmI9Yj6Ru4sytTguvDdoktgmM+kmpZc9zyLmsTTD0RgOF+iY7zP//4FWgmMT
      2txcZouGDHmSZFDZf9k7PqgsXzavePGrkSxvEojlq9rC901EqNFojF6/j26/D8eJTsWxE2i2
      48T/wzCE60Wbg7bjoNPtwpmeohsORzPWFwqg0+1iPJlgOJTHKErrFxMDZXK+rF+y/mfRKfg0
      lXIJ9VoVruseUrz5sX6gRSCZk1Wa3KvivFmWX1U5IqLx7cgyoSruLFooGLiej/5ggGajDo0Q
      JRKICOU4Dur1KHrGcDhCPm9hNB6j2+thZWkJvu+j2+tj/2Af5VIZK8tLIIhcMXJ6hAr5fLSy
      +H4APaej3+9D13X0+wPMtZoz/WII5TjOIfNiFp3mXiCLEYCd1ZDNJWvjA00Aw+EQuenlCPyS
      rLIWpAErI0vUB5mIICMEEURZV0R+leLJ/3/+tbfw3IaNX33PBOdOrUjrkbWjOV3ux+MxLMuE
      67rwPA+FfLSjGpmSQywtLCJnTMcVNEImcseMadsOhqMhWs0mmo0GKI0CAMjCuk+4W7QAACAA
      SURBVBASXUwn7oofBY6ah11txTYu+XhLDOFleopM3HugCeCO6TCZ2/Idkv1mIJNnk3zFRY6b
      1eqS9F6lV/ATtNSs4HRvjEatfCi/CGKbhqMRgjCML6AwDAPD0QhAhCitZhP9wSDm2GEQYDyZ
      gBCCVrOJTrcLTdMw12oBiK5l6nR7WJifk9bN6uc3K7MgtMqFWjWXfLmM6JiDJPOi5eOvJrlO
      zzC4B1kJppRifX09PgjPg0xZY/9lSJamG4hcW1xx+Dz8WeAkk6RM7EoSDbL0g1eC+Xz8hIsH
      YmSIxNeRpIwmITKldwKIpXnH8n1IU/6TOLfYJ1WZ7IpdcVf/0Fwqe/eAQJqyGkh2T8X0/MCp
      lClxZeCfyVYWnvsB8u16/n8QhLi1uQ3X9aT5xfS877wqLXuWZNY8iizO7wqLiqMMxPFMIxbx
      YFNSuUm/k+aT/TdNE4ZhYDweK5mbpmkPPgEkAaUU33nhNXzz2ZdTJ0sG4oSJbgGqtDynEn+L
      7WC/X3/rFv7Xv7mCH1x549DkMeRIaqeMsFVInlWeVq0wWfQdvs1Z6ksqT/X8buZTZEoq5sDq
      fKB1AKbUyJyY2PcjZ08kypxZFV5C1N6XYpvSuI8M5ptVPLZcxImFWUsK/63ijqJ4IGuT+D8L
      4sjSyZRyWb2iCCq2W+S4aXH6Ze1JWlFl4PtB7EjHPsxFXbax1u50HmwdAIgsGvv7+7ErhGxC
      ZApq0iAzYFEd7gZZ+AsyxHJlz0QkEIktTTTgCcz3/fjGl6T6xbKycGqV7M/vb/BtSdsIS+qT
      2C5Rn8vabkop1jd38O3nX8PnP/MRWNyZCuYaz4JkieU90CsAgFiJ4RFa5FAycUKlLPG/Pc9L
      DIPOyhPzExLdAsnLk2mTxK8wruvCmJ6HFetJUkjZe/629iQnMRljyFqP+DwLEqaVKysnS9lp
      0SAAoFou4sKpxXg/g6UTY4mKY/nAEwCAeBnjL6xIkn9l4pKYRiaHiyIJAxFReWSWIafqxBab
      EJGYgTvyKgu2Jcr4L75yFY+cP4VKedYpUKZ8i32V9eNuIAnJj7IC8d+8MyMhkYWLP/0HHF59
      +LJZvlq1gg88+Zi0XnbZuhhIYDAcHg8CWFhYQLfbjU1tvE6gQtYs3IZNgEwcEdPxZcveMZB5
      XIoEJ0OWXC4X27bZJg+LuxkEAW5ud3ByeR6V8ixyHBX57waJVeVl8e4EDnNwx3Gws7cHI2dg
      YX4OzrTPnuuhUq3AcRxs7ewAFKhWKmg06tjbP4DveygWi6iUy+gPBuh0uqjXo5N0TLTkxczB
      aAzfD1Aq5DG2beSDEIX8nShx5VLpeBCAaZozVhJZsFPgsMlTBBlBJAWYYmmyQJoMn1Ym6x+7
      S4xFnh6PxzAMA7/5iz93T778DMQVTyWCJIkmaWILXzZwxxDBkJOdzRgMhyCExBeUH7TbKOTz
      CMMQ8605UFD0+30AQKvZwPbObnxrTrFQgOO4AMhMmJhYzPR8/Ifnr2PohqgQB69tjjBfMfEb
      P38JS/PNuJ3HwgzKy/QyCwUPvFwuppHlk+kWMqJikISELJ24rIsKo5ieL5cFvqWUxtEhktyb
      jwpHMS2K49hud/Dam9diHSSLkx8PTGQbjkawbRu1ajUOYHvQbiOfz8cirJ7T0ev3MT83F52r
      PmijXCqi3ekAiK6HrVUrCAJ/RhpgHyOn42SzANMf4dvXhrjZ0/DcbQ9XbmzH7Tk2+wDj8Vh5
      EbPMGsTL2aI4IosyByRbjZiopAJxNRIPvoickC+Xtdl1XTjTiMesnMnExqtXbyIM5T5QdwNp
      DIQH/oKJIAjwNy/cwF+v6bjy+rW4rCSrnEj4TEeqVauYm5tDtVJBsVhEGIYoFYsocoHBAt/H
      4sLC1EoH1GpVVCqVONBAtVKJw8aoDtB88L0X8MT5FVBwm5x0lhEdCxFIJssmiTg8JxbTypRX
      EcR3PFGp0qSBTMnmCZZSGitqDLE6vT6+/qOXcWplYUb5ZZdyqCxcrGwxfCNLJ4o/4rfMMEAp
      xXxRR79zgEZtOfbDYSuUyKBU88Osbjkhlqvo2sFCpgBAdJ1RLl4JwzDEK2/ewENnVlEuFaU4
      wfrx0OkT+Mj5PVxZH6BVyuHSqbmZuXzg9wEA4NatW9A0DdVqVWr1AeRKnkq2Ze9V4Q3T6gBm
      LRMiYcie88Bf4iy2U9f12PTreR7a7Q6IRmAJFgwRcWW6D392WCQA8beqr7yexEI48veiJTEk
      Wb/587kykDExkfmMxxP8xZe+i09/8L1YXVlM1PsopfB8H51uH3nLRLVSnl2VU1v9Dwy+76Pb
      7aJUKiWKIb4f4IXXrmM0tjNNxt1wcJXucDdlqtrIuHsQBJhMbPzdN3+AP/urr8F171ymISKu
      avJV/RB/iwSRZEGT+eEfVT9JQ/60Z4VCHv/Jr30cJxKuiOIhp+tYnG/BMo1D5T3wIlC73cby
      8nLqOdYgDLDXG+Gs5wEopHK6LMqsiGziEis+E/+LOoCooCetEI7j4KDTxc2tNqpFA67nwjAO
      334jIqtYp9hvWeh02Qon/j7odLH23LdQLZdw/oOfBMkQo/9eQNZPvq/8OZGsDI/SKKgxn/6B
      JwDXdWPfduDwzi97ZpkmfvmDj888kyFDFo6VtC+QlFc2aeLGmIyDq8AyTVAKrO2P8Cdffxk/
      99A8nnrkbGxNUbVBZTUihEhdP1RjysPWXgf7t29hYOi40jfxuU98cBrT6OiQJLZlWY0YyERI
      WV3svWmaMyZTQo7BTjALQ8hO+qhED5VocK+QlcOoQBYNAVDvO/CQ03XUKkUEtSUMiit4bauD
      Jy4EsYNg2uSLq42M6ERFV7WiXTxzApr/i8iZFuh+/572JNIQm6UR4V7nU9f1+PQYgwdeB5ib
      m4PjOLHVAVDL2kmckb1Pys8mhv/w6e92ArIiqahnWJaJDz3xMCp0jJq7h0eWSlJzsNhefrVS
      uUrI+qfqq+e6eO7f/imu/G9/hOtf/gI++PjFxBsak0DFxMS2ZUnHz6dsVZN9DMOYwaUHfgXQ
      NA3Ly8tYX1+fWQUYiGKO+DztGf9OlS6JQ94L8O1W+btcungG508tI6R0RolLEqOS9BKx/Czv
      dtZvYecrfwmrvYPx3i08f2IFz/zSP0ahlH5kkwd2XJGvR7Zqy4hQpuvwaZLei+PkeV4cvfuB
      JwAgWrpWVlawsbGBZrOp5GiEEIzHE7xy7QbOrS6j1Wwkuk3w34A8CjWTqdOczlRwr0RDKUWh
      kI/bx4OMSLNAEmOQIZ2W0wEjB0oISC6H3LNfwBvddVz6nX8BM19AVjAMI46lJBoaWH38N98W
      MbIe3z6VLqHy82JuJqPR6MEXgRiw8OUqrsc6+qNXr+Mbe2V87crNQ2ETeaCUotsf4dsvvo4b
      61ugVB0tQiQKsRyVKCKrk/8tWmRkyMDvaicd9BbFgbQPn090NRbbOfF8PP1kAbVnnsDqYgEr
      vZuwXvkaDjZvS/uZBLI+iyB7LuP0aau5bN5Yf9mtPMdiBQDUFgyR6k8tNHCjvYOzC6WZQxri
      QARBgB+++hZeur6DU4s1zNUrqFbKM+WKAywerJYtu4QQBGEYh/++m51n5cQC0CQTqio/qY0y
      S4xM9KOUolIuoVwOUDO72Bm7CF0dTnURxWrtULlpIENIVb/58ZYRv0o3E5mBbC6ZGHRsCIDS
      6MI0lVWFwblTJ3BqZfFQQCS+HCBCzKJlwMoRFEw9Na6N7/s4aEfh08vTTbnRaAzHdWCZFkql
      ItZvb8CyzOhKn0olsT+ME6kIYzgawXU9aISg0ajDtm3s7u3BsqwoTGRC3+5FWeeRhj1bWFrB
      zQu/h4Wrf4bm2QresB/B/Id+A9XW/KH6syit/G9Vm5MYhqzOpNVA9s40zeh2zky1PABACIkv
      kuMPxrB3/DfzN2EyoMxtgRCCDz9xERdOLqJZr6KQt2bei+W7UwXuoN1GqVjEeDyBaRrwfQ+V
      ShndXh/1eg2O48Tx/3mQTWiS9aVcKiHIB/FtNo7rojr1ntS5VUXGCXlRR3wmE/PCMMR4MgEo
      habryFsWJpMJwmn+YqGAlfd/DtsrT2A0nuCJEydQrTfget50r2LWJYNvi9hflfIu5hOJhTf7
      yuZTVHoppVjb3AUFxdkTS4dWOIZPx0YHAIBqtYrJZBL/l3l28txAVJhEyOk6zqwuo1Y5bM3g
      JzO6+GICz/dRKZfheT4mtg3TNFGtVtHt9VCrVUFDGhOKyJVUci0v3/OT5/k+JhM7bkO5VIpu
      upnqQaIiKPZbJjKIKw6PFKZhwLQsjEajmCAMw4BtOwjCEP3+AFaxjJOnz6BSi8LLd7pdDEej
      THI9e5/0X5xPVVlZ3LAppegOx+gMxrHDHu/dCuB4iUBANCDi3cAq4C04soFkA8FOlyWeOaUU
      rWYTE9tGYeqzDkRpcrkcSqUS7MkE+byFev1wEK8sy7lojXIcByB3roK1p5GOtQzcn/+fBowo
      mMjIREEjl4NlmnCNyOt0cWEe9mSMa1/6v0FdG2d++Xegkek9vHouk5WMjbdK8c2yuSZGCBHL
      YN+6ruOJi2cOPeeh2xscLwLI5/MoFAoYjUbxVUaimTMIAly/tYlauYid/Q5+8OKrOH9qBZ/6
      yNOHBoAdQaSUHjpUARxeVgv5O+ZI3ssyp+sz7r3sWyzrKEhZFq7/LE7dg8Vy07iq7J2oFAdB
      gF4vOnnluA6qlQpG42jFc10PhUIUUeHGSz9E9av/CwCKtXIdpz72q6m6jowgZaKQGMggiXmJ
      5bP3InGlRd7o9HrHiwAIIZifn8fW1lYcrLU/GGKv08PEcWEZBqqlAl56cw2bux28PTAQ9g6Q
      tyyElCIn4TCWZcFxnAiRJcFfVdaVLOnE9ElEICIID0mXa2S5eSXJ0sK4frPZmHm3vLR4SG4u
      N1qwrSq00EO+uYjK1Ecry6ojWptkwPv7d7pdjEZj1GpVNBsN7B8coF6PomUTQtDpdqdBch0s
      LS3C9zzYto3ReIyV5WVlO3g4vbpyvAgAiAZ5aWkJGxubuLa5gcu3h+iHJvyQQicTlOkOnL09
      vLXjYmjOQSudxNZEw2RiHzpQziaC+RvJIgcwSNoME1cK9lvW9qNAllUj6aBO1vpkyqsMUVcv
      vgeb/+L/xObbN9C+fBmkMo9zl96bWLaoh/Hcn63evGUOiDw9m40GLMuKI4Kwa6529/awMD+P
      3NTErevRPQeWZYEC8b0HScCfTT52BEBpFI/+xZs7eHGPIHAI9MEtaJM+QICBbmE8CVAslzB0
      AQoNcxUzNf4PIwJ2aCNNtBCRQ8XVZEoney5DcD49jyBiXt4iIpbDW4HEcsUVJGv/AIBoGlZO
      n8WN536Awd/9G1xzHZx59JLSe1am0PJmbJUlLwxDHHQ6aDWbODhogxCCwWCIiT1BsxGtVJVK
      BY7rIgwpdE2LuP9ohLxlYTAcxquTDPi+HksCeO3623hplyK0Bwg6W3i7r8EJa2jpQ7SqOiqF
      HCwKNPMTVIsm5kvaTDApBuKk53I5BEEAx3Hik2IqWZu1RXyfJMqIdYvIm2bTFuuUHfkU34ki
      UtLVTzKiFsUgAHj4Ix+HNx7i/Ac/lkn5VSnoog7AK7etRgOB76NWrUzFUz0O2R63KwzRmBod
      CInCuxNCDnl8iu041gTQ6w/w/ev7CJwQXncXV7t5UACLBR/NQgGoLWLr9hqINwTVLdwa6Fit
      B4euJpUBk4ejSyLs+LcIR7W08PlELi7Wr3rHp1ERCq80slvUxd1zUUyTiT9ie0RYWDmBT/yn
      /0yZRkY0snFg6X54+XXsdUf41Y8/M3OhHk+44kk0ADPHWXnRVTZnKjh2BDAeTzDyNRB/grET
      gMJEnrhoLS0BRh7acBfzc3XstUdwfeBCaYiBbc5cNZTFuS2fz8dRGngkUuXhAzIlgcqfRyVS
      JYkLYnqZKCJyfLbyqMrKUg/fLhnwaVTAc+OnL12AP71gQxTbVEqzuHps77Vx0Oni0sVzSjMp
      n4/N17HaCAMAohEQAhAaAGRqEwcB9T34ngtQgDhDGPCxUgnxjz72DE4stfDiGzdnLn/LAiwg
      l6dQrHguzB8cFyErh+U3gsQ8sqOMsrJEDi/zhmVcNklcS7NWJcUjZd+qMlkf2MeyTJSKhZn8
      snLFd/yYPPvjN/GFb7yI0cSW5hfLZm05ditAuVREzQgx0kwUKxXkRhM4NIetjS3kxnuo1qpw
      fIJKycJCrYiVxTkUiwX4vh9ZCHAn+JQIvh8AJHI4Yy4UAOBPo0gHQRClAZDL6VKLUVbiknE2
      2QrCuGDSMc2k3ypRK4sSnGbJSlqZ2PjJ3JiTIE3044GP6veLH3kKH37qMZRL2SKcMOI7dgRQ
      LBTw6HIFm5MxDEKwWrdxuxuiFxRR0quwhn1MqIntoIa5KkWxkAdAUalUYE8mCBFFFVtcWMBg
      OMRgMEChUECjXodtT+AHASzLQiGfj4hmenqITv2QXNfDxLZhmSaaTbnJNIvIIsuTVgZ/gYeI
      iDLxQSxLhvQyEy6g3l9IQmKZ+MLnzWogEIEnIhUhlYsFlBWrSJKYd+wIQNd1vO/Rh7DeeRXX
      9jWUm3N4qGTDHQ1ASAPhMETHLaKVD9Afh/DZoXRKkc/nMRyOUKtWAQCmYSAIQlTKZVBK4U0v
      WAAAz/NhWdYMlzcMAxPbRrFYiMsA7o/Nn8+nspbIEEnGkXklOU2UUXH0tJVMpkepzJoyEAmP
      fcuITuZSLjMEyE7Vpc3NsSMAQggq5RI+8/6LKP34Ot7c7MHRfJjVMggoiGaj1yNYKlN8/L1n
      MRgMMD+9aLs3DbTKrAcH3R4297vwQuDUyiKCwEc+b6HT6WBxYSHebQSAUqkU+ca4XkwwWSZX
      BuyazzRQ7ROI4o6Ki7PYoqpxFMvKClnEGd6sydJ6npd6FZQISYpw1vaIRDYzZschMpwMKI0c
      xNY3trG+28Zo4qBg5rAy34ChARoBWq3WjJzIW2p29g7wly9uYqBVYIQ2PnXGxBMXz8Zp+W8G
      vG3d9/2ZCGli25Js+o7joFAozOwDiMgucnP+Gf9b5MB8GhbFjb0T+5RGqDICzOKfw/rINh9l
      6UVlX3bOQ9XmNH0lC9Gwco/dCsCAEIJCPo8L507jobOnZgZhf38ff/W1H6JczOOzH//AzFLK
      kOrVm5sY6FWAaPC0El64sYUnHz53SA7mkY/lZ96jLPSgOPgyWTxJDhUtJzzys/pkecT0Yhr+
      v+N6GE9s1KvlROQQCUxmeVGds5b1R0bIMhGPMRcxj6ZpM3cQ82nEMZO9lz1j32EYHj8zqAgM
      MXmkPDg4AAVAIZ9kQghqpTw0Ot0dphSN0h1uJQKPbAw0TYNpmrEjnSj/9gcjfO0HV/DFbzyH
      62sbCI5gHuWBJ1oZQgLycxFiPS+8fBV/8jffx3A8OUQs/DfvM88rnVl1A75NfP2qj6z/Kv2A
      f8eDzICQNBZ83cd2BVCBaZooFov47c9+DIDauvL4xTM4GF7F6zv7mC/qeM/q3IwSplpG+fI0
      TYM1PT2Vj88JALbj4N9+8zKeX5+gjDEu3zzAf/wpigtnVlNFB5Er8iIcgyTxSgUnl+cRhCHy
      EtOtSNgiyCJMJ5VBSOSOIBOfkiLasTLCMIRhGIkbWnw+Vn/SCqNShn/mCEDTtNiVgQ+xzQMh
      0XG4T3/gMXwyCLB70MHffe9lLM61UK9V4jRZODQh0YV5tm3DsixomobtvQ5e3ZqgghHaYRna
      ZIiXr2/gwplVAGoxQ1ym2Q60aOlIOxfN18HKWl2ex+ry7BneNKuSrK9J9c1YV6ZuJDwS8+7O
      SXsDSRuCWYheZBZ7B238u6/+EJ7n4Vd+4RmcO3Uifn/sRSARCCFYWVkBpTR2ZeCBVzwZsSzN
      t/BPPvE0qpXD929lWfIJIbHrBKUUeTM6bO8hh7o2QpE4KFp6fP8XINcBZJMr7jDLVgQZqMpX
      KfZJedOUSb49Yl0iIYptVxEBnzZJSZc5FIrwd9+9gjf3A1zplPDs1Z2Zdz9zBABEg7a4uIjx
      eJwqGwMRUrUatcTlWTURvLycz+dh2zbmmjV85ollFPIWDBJiLZhHTiMwTTO+1URWPg+8Usja
      qGpHEuGkQZp1JivwbeONDrKyxT4k9U3WRhHGExt7B5048pzYdkOfMg1Q6AQzl4v8zIlADDRN
      w+LiInZ3d1Gv1+PnIsfJatZLAl62ZSvBR9/3MC6eWsBLr9/Ay7d6OLcaxbKXnToTf/O6iKoe
      EXhCSVMyVfWLN8rczdiouH4WS40KYn0s+gNCCIIghK5ruL29hy9853X0h0Ocny/gcx//OVTK
      s2b9z37sKVD6HDzXw5mmiX/1Z9/ApZM1/MYvfvBnlwCACBlLpRK63S4ajQaAwxNyL1GOGYgT
      yY5ZLi/MYWVxHr/ExcSUpWcgEqaokGdBZJkFR1WvzNrC5/naD3+MuXoZTz32UGL/k0DVliz5
      gCgiR6cTcXfP97G8uATHddDt9VAulfDty9fx0paPuhbAnnTw2PomHjq9gsFwCFCKWq2GcqmI
      z//yRxH4Pl5+4zpuDg0Ym/0oxM5d9+wYACEEc2wXuNdDuVw+JIfGNmFK8datTbiej4fPnJhR
      3pI4qcrKxIjAMIw4CFMWjicjTJktXKw77odCppelVYld7Pn5E3Oxfw2rXxU9g41REASHIljz
      46I6diqzthFCkNM0NBsNbG5to1GvI5+3MLEnWF1ZQa/fj6+/64QlBHrktGgaBvKWBdf1YFkW
      dE3DaDSC4zh46r2P4veNHFYW549fXKC7hWazCZ8C//4bz8JxXCkiuq6HH1zbwfffamMwGs+8
      y6JH8P/Zh51pZUjBzrcmgYzT84iWFhNHpQym9eG1t9bw/37rCjrdXlzO+dOrWJxvxYgvrjKy
      32L72W/XdbD+93+Cnf/vD7F78zVp/2TKt+f7aHe6mJuLToP5vo9yqYT9/QNYloWff/IC3rec
      w7I5xrxpY7FVj2M2lcslDAZDAFFcJRpG4V+efM+jWFyYj/qVOJo/Q1AqFrHQrCgjKJimgQ9d
      WMSHzzdREVxqs3Bu8ZAJy8OIYDSe4IVXr6X6wqgUbfY+q1VKXEHS8nUGE2z2PdxYW0+0GiUR
      FqtXZoHa3byF5bUv4vzwOUyufGHmiKpMPGL15nQdrWYDNAzj0DBBEKBeryFvWVhdmsN/+bkP
      4P3nW5iEBlzPQ61ahUYiT4F6LXJazOVyWFiYP9SvdwQBEEIw32rimUsPQdc1eJ6Pl9+8GV88
      B0RnAM6fXMaj507GIkfSjihfNiC/A5gQEscQGtsObm13ZspVmRhldfCWEj4dv3MrQzz2m6UV
      d43Zu5NzVdy6fYA//97b6PX7qW1MirzNl83aXGvMoVM6jy6q0JYfl4qYYr94wsjn8/EYs9j+
      rPxiIY/Pfuxp/P6vfwAri/ORKZrbmGT95kW/n3krkAiEkPiKHNvx8Pzrb+P0ynx8VphH2F5/
      gL12FyGl0IiGE8vzKHLnT8fjMYimIS+cUxWtNMyaQynFfLOOX/v407GDmKhXyOzn/LfYF9ZW
      mauwTARJg2qljKUyQcE04n7J2sZ+Zzkmyo9DuVoH+cwfYjjs48SCPG4Pj6DiGLByVOJhIW/F
      8V1V5YrWNUrp8fUGvRvodrtxxAff97HT7uHa7V0sNSq4cHoFQRDguy+9iRffvA3iT2CEE5BC
      FavNEj71kQ+gWimh3eniL753FQYJ8XuffCK+3VyFrMAdxOHvJZZNZKfbjV2G51qt6HCOaWIy
      ic4gjMdj5AsF+J4HSqPrQoMwxHg8jl20+Ta4rgvTNNHr96NzEYSg2WhEl0OMx7BMM441Ssgd
      94VcLgfP9xEGASgFDCOHXn8A13Uj0SOfR7/fj5TNKWfeOzgAaOS4Vy6X4XvezEF2RrDst2h+
      5f/zCreo/4QhxQ8uv4FGtYT3CKEP2Tjyz2SWLv75O2YFACJ5vN1uw/M8uH6Ar7y6g92giEJ7
      DEI2ce3WLl68tomKBYTNVdhmCZo3wVr3AF/8yrfx65/+eey2u7ADINBzCPzDoVYYiAdGCImC
      N7EL/2TLfrPRwM7uLkzTgmEYGI3HMI3oitQCjcJCRrvb0bno0WiE4XiM8XgMPwhQr1alBMiH
      L2RcsFQsRsplq4nReByHErFMM3Yl2T84wOmTJxFSiiAM4Dg2JmMTpmHAcRzUqlW0Ox3UqlW0
      Go1Imb6+hq031/GxJy/GdcqsTjwyylY48ZJvJvb0h3185fItrNQLeOTc6iF/IdlKKCMQVv87
      igAKhQJOnjyJIAiwvrmNoU9ANR1OqOP1t9Zx/fYu6iaF03wIATTQ9ga0cgN+aQEHoz189bvP
      ISzUkNOATz/SQqlUlJoYZRtZvDjk+/4hIiAkuliDUopWM9qzKJeiSz74Q/n5fB57e/tYWIhk
      3Vwuh7xlJcboFOsZTyaYTCaYTMagtDldxabvtelqNQ3zPrFtmIYR3YkQBGg0ok3FuVYLe/v7
      KBaLM+enF1o1lIoFpdUpyVLE8miahkKhEB9HDYIg3kWvVcr43U9cQqWYV4bJzwIxcbyTRCAG
      lFJMJja+9vxreH3XxkKRwN67hXW/ilHnAFQ3YeR0aLqBYjHiQpo/gd/bw/JiC/u2hpVGGZ96
      5mE0JdGgeRBlWBZ5TubQ1h8MUC6VZlaOTreLUrEY6w77BwdxACgQgna7jVazKa3bdd2Ia/YH
      08YAlUoFJhclT2aVsh0nukJoehk1E1EmkwkKU5Gv2+uhNl1xCIlidTKo12ozh3H4cefHRQSZ
      rsHSjUaj2OWdvRejeqtAVRch5J1HAOPxGBsbG/GgOK6PQiGPr//wMtb3ByBmAU7tFEh7DVYw
      ATEsUFDoORMXet/H29oZDPU6XBj44IV5fOrDTx9aYlWKqz21T4vWCJ4rMmQbdNrYeOtN5AsF
      nLh4aeZ0FauHTy9b5pm4xefj84rAW3x4RZTvgwz4NOwoJK/vZAVx7MR2wrOJAwAAHzpJREFU
      MutQMI3SwW4MYmKQqODybVbpCe8oEQgAisUizp8/j62tLVSnHMwwDBTybwBlEyT0QIw8LMtE
      aDQAEOTGe3AGPVwLVrFpl9CnJj64CrznwhkAhxGHPWPADz4vLvCIyyPy/uZtbP8f/xLVvavw
      NROvf+DzeOyf/v4hP6KkWPuy30nP+HfiJpdMoRT7yNJl9VY9KvDmZt7vajKZzJhrCSExgTBz
      aBAEsfmZH29N0955BABEg3jixB2f8DAMce7kIt4cdqGN+tC8MWgYgg72EDbPwPV1+LYLG3mU
      LYL3nzDw/iceRatRA6UUvf4Qf/utZ3H6xCI++vR7lJMvsxSJHBcA1r/8Z5jbfQMEgBnYKD/7
      l1h78hM4d+nJ1L6pZG/Vu7shoCRrl5gnSayRQdoqI5bNRDIGtm2jxN2tMB6Pkcvl4utZ+bIo
      pe+MjbA0IITgsYfOYbEQwi0vw+q+DZrLI6QExsZLmPS70KwCjHwB8/UCtno2vvDdV3D17duR
      +TDwQSkw31CHSmE7nyoE5eX+YDQAn1sPXVx7+QW0O11pXlau6ELN/xatH0mEwtovilZ8OaLf
      kEwMFOt94601/PiNt2JufBQQ2yMT0YBoVeA36Uql0iFdhOXVdf1dAgCiyaxWK/jMMxfRyBM4
      lVVo7giFYADoBoqWjlYBsEdDjIZjjCcuQsfGta0OBqMJ5poN/N6vfRIPnzsFQM4BZWHXZRYR
      AKg+9Um4+tQECGBQXca5yQu4ceMtpXjCQxIX5a1UMj1F1h4xvyzeqErHYPWEYYgr1zbw3Ovr
      ie4gWXQOGXMRCcF1XanvlXhP2DtSBBJhfX0di4uLOHtyBZ/P5fDD19dwy1yAFy6irAV4tGpg
      ZLvohPvY6/YxpHmAAP7tDkJyHZ/7uUdhGDmp+ZNHBBFUNuuz7/8Yrgf/A/YvfxPh5ADnm33s
      mRXUG41EDqgSM+7HmQdVX2R9EJViphv8+ieeiW7qkXiLin1IaquYR9M0BGEI1/VgGjncfONl
      TH7871GydMx9/J+h1lo8NG5xfe80K1AaMFPl7Y1N5AwTectEpz/AFy7vor29gb2eCw0UJeKg
      YGmozc3jc0+fw7lTK9Ilmv0eDofxZg6PvKpI1ZRShIGPzauXcbB5A6XVSzj70KPQ9VlCEvPz
      yMG7HssQTdb3o6SRHdBhSiiz3afpHUmiUBarEyEEo4mNb//4LWz1XcyP1lC6/NeghoGFko3B
      +U/i/b/8T2FwLtjvaCtQGhAS7dgaOR26BizMz+HtzV3YMJHXAkyohQAaSiZglAqwCwvY3tnB
      w+dPKwPYsigHvu/P7FzyVhPZhpqeM3Dikadx4pHDF/wlcco0JTwNkk6e8W3l4/gn6QTiBXiq
      8rK0k2ca7P+Pr93ClX4B5v46aus/wupoG43xDkKiYegWMf7wZ1Btzh+qi1L6LgHIgBCC1dVV
      TCYTEEJgGjlodAStWMEZPYDT66BWK0EzLbg5C5QOppGjI5nT933Ytn1H8fU9/PDP/xiPfPIf
      4aEnnjqkECct+SrEUFmTVL955VUW2IrPk7a5xBOfSIh8fbz4I+uD2D8GKvMuSy+23/F86J6H
      X7e/gE4uQGO8A50G0GmA5u41DHY3YwIQ63+XABTAnLoA4MTiHJrXDtAmGnLzq9A0gs2DARYX
      itACB4utBnZ3dyNimSq6hmGgXC7Dsix0Dw5QXjqBfLkSi0HMRVcW7VkFNAyxf/s6hrtvo7xw
      GnOrFwCJ6CRDat7yoSKWLO3g3zOnNbFMMa1q9RLbxiN14PvwPBf5QlG6IvBlPnpmGetbV3CC
      biE0qqBEA6ZBz2jOgJ4z4zJExqH/wR/8wR+mXSD3TodC3kJR87FxMIRnj0CLDZSMEFqpgcdq
      Hj7y1CXUajVUq1UUi0UUi0VYloXc1JXAtCzMn70ANwhngj6xTR2eo6ls5ZRS7N96E+Z3/hVW
      tr4C9/ZlDGoPo1SfV0ZF9n0/VjjT5OnhaIy1jR206nKHOhl88avfx+7+Ac6s3nFv5q0s/N3L
      qrpVptY3nv8R3vzuN3Dq0hOpcZBKhTxOL7Ww03eRH69j1zgJ3XPg5WugH/otnHjmY9A5xXvj
      +pugoMgXS++uAFlA0zRceug0qsU8Xrl2E3vtPegtA2eWDDz+yCOxDCxyVobsmqahWq2iXC5j
      MBhge3sbQRCg1WrFzmRscvlDKyKXHG5ew0XvNgiAlnsb1zavYu7UI4kmSdXVTaLyvL61i++8
      8DrOnVyWeqvywPJ86ImHYZqzzJPXB9L2HFQiHCEE5977JFbOX4SWQkQMatUKSp/8z9Hv/SYu
      Eor+9jr0nIm5Mw/BMO/sA4RhiLXLz2Pp4qOotebftQIdBSiNblVnSLq7uxu7U6gmiPnG8D4r
      7Hm73Y53KhuNxkwkO0ZA/I2H29evoPqDP0LNP0BPb6H/of8Oiw89cYgAGDCXYjo1PcqsTQyC
      IIDruvGKwc4yJ+3kqrhyML2TgVmgPCcKBpYz7wQSFpGfD/x1N+baLPsHjKkwVwlC3oHOcPcL
      KKXY3d2F67oxEYgQhiF6vR4cx8Hc3FyMhOJtJ57nodvtYjKZoFgsolqtzvjCx8Tgedi++jzs
      7WvILz2EpYvPgGiH42eytvDRqw3DmNE5ZOD7PtqbN9FeewXz559CfXH1rseH9S0IArz1jT8F
      MfI4/7H/KPFSDbH9R4G7MfMC7+4D3BOMx2PcuHEDJ0+eTLRm7O7uotvtYmlpCdVq9c4u5DR2
      Jp93NBqh1+vB8zxUKhU0uM0vAPEKxIARENPjeHGHnQhjK9DOzk4cPU0GOV2D86X/Hqe8a7iR
      fxzLv/WvpfFJxT0M/jlrU9y+MMTGG89ByxlYufhUYlrx3VFBtkPNg2w1e1cHuAewLAvFYjHV
      hGmaJh5//PE4dLthGOh2u6jX6yiXyzMiUqlUip25+v0+1tbWYJomqtUqStMDMvx9Adu7+/ji
      15/F7/7Kz8cREBiEYRgr4kBEPKuraq7e7/Xgcl1heyK+78eHcnjkUYVKEQYBJx69c0eDzCIE
      AGEQYOfGqyg1FlCdW4rKBECQbCYWy9rb2oSmaWguLB5SsmVE/C4B3ANomoZms4l+v49KpZJI
      CIZhRJfvFQqYTCZYXl6OdYBisRjL+/yhj0qlgkqlAt/30e/3cXBwgHw+jwp3+itvGvjApbPQ
      SLQi8cDkeAY892cIy3PFUrmM8Sf+JV67+TJqp98Th31nJ6/4smQgmmBVu9yy8Rn2O+hf/itM
      Tj2D6txn4TgO9vYPUC4VUa/X4TgObMeB53potZpwXQ/D0RCu52Fhfh66piEMArz0V38B3bLw
      if/sv8p2WOZdEejegFKK7e3tOAKc+A4Aer2eVEzyPA/7+/vxplmr1ZoROdiqwOebTCYziE4I
      UQbdIoTETnhARLCN6dlddn8Y45CMI/Ki1ObmJsrlMqrTCwF93z8U918q9nArRBbZPAgCDAYD
      +PYQpXIV+VIF7XYHnW4XjUYd9VoN/cEAk4kNz/OwuLiA/FS539nbw9LCQlxve28XRNPQaM0l
      1hm/e5cA7h1GoxG63e4MZwbuIEK73cbJkyeldxOzdG+//TbK5XKMrDxi8fsFR5WPmR7A1yUe
      EBGtOvxRw62tLRiGgbm5CKHYiSzRIiTK3+JOsWx/Q0zf6XbRnMZwdV0Xg8EQjUY9bksQBOhM
      o8QFQYCDdhu5XC46s1wuS9sAyG+ZZOneFYHuA+RyufjiOx7J2SCXy2Xs7e1heVkdD4dd3s3f
      rsjeMfcKkVuL9TDgRRFmRuXvGeDFHxlCMlFM13UsLy9jY2MD7XYbjUYjJg5xxeHlbNlqoJL9
      GUxsO15pgOhK2nKlPJPOdT3UpmewXddFs9lETtcxmUyU4xq3gVLsrb2O4dZ1NM+/D7WFk++a
      Qe8n+L6P9fV1NLkD6vzkMTFIBevr6zN6hEy0ELkpn07FiYHZs8EyhVJl4+e9V9vtNjqdDlZW
      VuIbLvk9CpmFhX8nWx1EYHllZahMp+N+Bxsvfg9azsDqUx+BVSzH7+zxGC9+5a9x5olnYOZC
      GN/5I7Tc29goP4HSL/63qDTm3z0Qc7+At8yIbg2A/NAGD7VaDaPRKLEOMZ6mzLoh7jEAs5dt
      8IiaZorkRaVms4nTp09ja2sr9gESV48k8SyLz5NqfGTEQEjkZfv2f/hzGF/8n6D95f+Ite/8
      7Yzo5To2tl55CbfeeBWj/XUYbhedsAJrvIVxdw/AuyLQfQNKKUajUazMyrisKN7wUKlUMBgM
      Ui+Sk32rgBeZ+P9JZYvPGAEwEa1arWI0GqFarcaRGdIgjdgY8CuDaG6VgevYGN16ExU/2mke
      7m/OjF+10cQn//l/A8M0sfHKd7AZtBCCAL6G/CS6PejdFeA+gaZpuHTpEkqlklScSPOxJ4Sg
      Vquh1+vFeZLEAFEkUKUXVyPVTrDKjs8IlxFCq9XC/v5+7O6gAv5cLtvw44Pb8iIb34asQCnF
      xktfw8niFgatVezNX8TCB37pkP7UmF9Ae+sG+pe/hBdfmeClKyPsjCxMnv0THGzffncFuJ/A
      lFmZjGsYBnq9Hmq1mpILl0ol7O/vS8sFsiGIaneWl695yLrJxPxnNE2L70IrTYN4iUTFLFei
      RUvsA1PueeuTrN98ekpD+F5kEKB2D6uFHppnTKzrc6ifPC/N8/YrL2DnubehH2wDALa6C/A+
      9CScq5ffJYD7DZZlYTAYgHcxJ4SgXC5jY2MDpVIJae7n/Mmxo5o9jyLisOdZiICZTxkBOI6j
      JABCyEwAgPF4jOFwGIuG/IedlEsjbkopOrs7eOPbX0P3+mvIlSoonX3o/2/vWnobya7zV08+
      ihQpUiRFUlRL3Z72zAQZB4jjwEm2XuSBLL1IgCBAFv4jXuQX5IckG3tjeOHHKoEzToJBY1qv
      FtUiRYrFd7GqyMqCfW7furzFh6a7rR7UBwiSirdulbrvufc8vnMOPP87sBILJL//T0hICnH5
      vg97Mod632KVNjT7DgW/A/RfxQLwrpHNZlkBXp6GoCgKyuUyXr58icPDw1DjPh61Wg03NzeR
      nz8Emzwz2wgZf6rkcjlcXl5if38fqqquLGJScRzHQbPZhKqqKJVKaLVaCIJlzrXneTg5OWF5
      E1FCQNd67RZ++2//iunvfg3MfQAK+tk8Bn/xI/zlj3+CbG5f+t66riOZSmOWtKBNl91igkQa
      BX0E/+6/YgF416CiW61WC4qiMNemoix5NdVqFf1+/02Xkzw6nQ5KpRLz3pimCcuyGEWCx667
      O7C5asM2i5/X18mQPzg4wOXlJQ4PD0N0Cf70uru7w/HxMTvxKMMOWPrxLy4ucHp6CsMwliXZ
      PS/kBuV/fvGbX2L65W+hzMnoDqAMe3Be/A/cqQPkwn8vL9yHR3Xk/qSBV182gbmP+veOcZLs
      4CJIxQLwPmCaJhqNBvr9PmzbRjKZZFx/MnYHgwEmkwkcx4Hv+6jVauw/LZ/P4+zsDKlU6ht3
      saRF+S6y/hRFYXNR9tv19TUKhQKy2WxI7ydhoeQasUOLaZo4OTnBq1evUKvVkEwmYRiGlK0a
      LBawz74CPHfls3n3Fv32LYqH1UhV7rDxFJnqBM8qFfjQcKy1EQRAS6vGXqB1mEwm0m7z2yKX
      y6HRaMD3fVbDElguykwmg/l8DsMw0Ov1cHt7y+7zfR+u68K27ZCHR/T2yK7x4FUSfrz4Of+7
      bD7xOu3Uuq6j0WhgNpvh/Pw89L4k+ABYwQDP89hXEAQwTRPHx8dotVoYjUYhJwIQ3sXNvX1A
      WV2uSiIFM22Fxot/a6l+grtP/xl72gwN9Q7zQEEz+Ryj07+JT4B1aLfbTG15KFRVRbVaxdXV
      FVRVZQkqZBjbto1yuYz7+3v2nF6vh1KphG63i0KhENrZZNSCdUZsFEVhHWSRW5qDrpONo2ka
      SqUSCoUCer0ezs/PkU6nMZ/PUavVVoJvBLqfhOj6+hqZTCZU/pyNV1Uc/9lfoffrnwOd12/f
      S1Gx98c/QKkeTfEmr9jRD/4OrYMTXF7/H9RkBgff/SH+unYUJ8WvAwWCeN31ofNYloVWq8V6
      AwBL4eh2uwAQIsvd3t4yndp13VDDN1kwa9PvYu/eqLHrIruy5/KEOlVVYVkWs1sODg6Yh4gi
      2OL9fNmU4XAIk2vZJBrpuVIZQbEKu9tFsJgDuSJyP/wRvv8P/wIrl4/8d6FrqqoiWzxEpvYc
      yWIDtaMGDMOIuUDrEEXkeih838f5+fmSxMUtSKoal8lkoOs67u7ulsbb4SGur69Z4o34buJO
      ydMA+Penvmii+rRN/R8RUcE5Wsik1gFgfKGoCC/dQwZwq9ViVbtJTeKfs1gsMLjvwr5rwUwk
      UazWYUpcnxSE63Q6mEwmLKvOtm1UKhXmdABiOvQHx3Q6xc3NDaMXE7rdLuPq53I5prcvFgtc
      XV2FAmibOkPyWCwWrFuLbMymNEIRst2ZQIJGi1V8RxovVoqjmMHNzQ1LAiK7Ydv3Et/RdV00
      m02YponBYIBCoYB6vc6y7QixEfweQMkmd3d3rM8VIZlMrvDzF4sFcrkc2u02stlsKCKqqioq
      lQoGgwGrVCe6CKNA+cPrFs9DTjfZ4ieCHAXMogxz2TN5msXgTY9ivhHGrpjP58zmcl0XX3zx
      BT755JOVxQ/EAvBeQAuh3W7DcZyVz/lrpAZomoZcLofhcLgynpr7iXPJhIAW3mKxYGqEyAYV
      Tw5RPdnGWBaNZJ5yTdeiIH5GAkAnAdlFFEiM8oLJ5u33+7i4uMB8PodlWfj888/X5m3HAvAe
      YBgG5vM5i3LyINcq5evSFyWwR7ErFUVBPp9Ht9vFdDplwkACJEMQLFMcxXpDUfOL7tWocVHG
      LD9mXfkTmQpHQlqr1eB5HobDIRRlSaRDEGB438bc90LvKnPXdrtdOI6DJ0+e4NmzZytpqiJi
      AXhPME0TpVIJ7XYb7XYbg8EAg8EAL1++XCGr0ZemaZhMJpGLL5vNolqtYjabYTQa4erqai0d
      WUYxeFcGPQ/vTVPsXVUt/r34jYDcwnTCdW/OMfr5T9H8/a9C9/Hfp9MpOp0OFEVBtVpF+U2e
      8CbEAvAeQfVCW60WhsMhxuMxstksbNvG/f19qAIE6by6rqPdbksJZrquI5VKsd2NCm3JFjiN
      58uZ8J/LsM7VSthGDVkXlFsH3/fZ6WhZFi4uLpYGfMrCNFWFaeWl8yzmc5z/8t8xbb1icYVt
      BT32An0AjMdjZuCaphkqWQi8PdIpaOO6LsbjMZ48eQLP80K1gHhcXFwgnw/7wGWRXoolbEKU
      i1McI7pfydNEOrxM9RHdrjL7hYSe6NaGYeDq6gqnp6dStygJ28xx0H11BiWZRrnWQLFY3Pi3
      EuIT4APAsiw0Gg2MRiMEQSBtIM0vKKrmRuOjMBgMYNt2pPEq08U3YZudWrQVxNNll4gzgRii
      lHBvmmYoBZSESzb3bauFiWJiPPORy61vXC4iFoAPBF3XkUwmWXBGBn6h7u3t4euvv2ZBMhme
      P3/OuETD4VC6+9PPYhBMvB5Fsdik8tA969Qm2Tvxv1P8gOwI3qhOJBKMjxVFzyiXy6wsfVTE
      OwqxAHxAVCoVnJycAFgGvmiHWywWUqE4Pj7GaDSKrMiWTCZRq9VQq9XgOA6bQ7QfVFXFeDzG
      dDplbMt1OnwUZJ/xu/+m/OAoT5H2prSJWLkOWHrUqOwJn0rJC2U6nYamaQ9ivMYC8AFB/9mV
      SgVHR0ewbRuDwQCtVkuaCklG7FdffbUSUOPnNAwDx8fH8H1/pfpCEARscRBJbZ27k3ZyYqTy
      kI0n4eRVLfEkIP0/SriIFMdnwZE9tL+/z1imvMtXPHHm8/laD1oUYgH4A4AWLVWLrlarkRUW
      0uk0HMfB1dXV2v9casnU6/Vwc3PDFibRkMkfTirFJrWFjG/KVwBW26N6nhfy3MiCfiJPSUQQ
      BOx+vtEIOQUWiwXy+TyzdQzDYE1HeORyOWY/7IKYDv0HBO99S6fTuLm5QTqdDgVvUqkU8/0P
      BoNII09RFBQKBRQKBbiuy+p68kY3rzevc3OSwPBV4MToNfH2+Tasi8Ui1JOAIOueSd9pvOyE
      INewZVloNpvMTuCr3NF70LXRaMQ8Y9sgPgEeCQzDYMkz1HiDds10Os2yyLaBqqos20zWJ3jd
      TknuRl4d0XUdiUQCyWSScZkWi0VobhKKdQtPVL2IPiEySgk8hePg4IDRHIbDIV7+7+/wi5/9
      BxzHwU3rDq1uH+Vymf27basKxSfAIwIlz3ieh2aziWw2y7wamqZhNpvh/v4ee3t7a70dtm2z
      BQusktcMw2BuR1GdEFUxmV9fUZTQKcUzO/lx60BzkDpGO7nMxqBnpdNpzGYzuK6L3pc/wxeD
      /0Tn1VPceWn8/qyJ540Kvvfdk9B7bkJ8AjxCGIaBarUa2vFpkTWbzY1pmuPxGMVicWV35eci
      ARG9QqT+8EGubRYz/44EcUHTZ3z5xkQiIQ1y8baD67pQlGVyEp1C9T//eww//0cc1J/i+UkN
      np7Gf78eYzgah56/CfEJ8EhBui4VpAKWuzOfPM6XXeExm82Ybn1/fy+NjNJ9tONTZeptds2o
      zpPAao7CLsLDf5eNAd56nWrP/giL089Yz+W//dNTzP05ivu7lZOJBeARw/O8UEoklVEZDoeY
      Tqcse0rE/v4+rq+vMZ/PkUqlWP0ekcYQBMvEdnIfikatTPUBEJpLxDZ0Cn4cnQLT6RSpVGqF
      HiLOQYYznzusaRrqh5WVgN42whwLwCOH6PumKtLrSq1TkvqLFy9g2zZjpvLgF4qu6yuV7DYR
      3qLUHf5dZffJfqbxfE0hfi4Z5YKvTUon0nQ6ZZlz23qBYgF4xJA1yzAMg3GAeCNZhKZp+Oyz
      z+B5Hnq9HlqtFhKJBPb331ZQ470y/I67rdoiG8fnBMtOiah7NU2D67rwPA+5XC7yHVzXZeRA
      fgzdu4n/LyI2gt8xdnHBbZpnNBqtLHBFUVjHmW63u/FZhmGgXC6jXq+j3W7j8vJSWiFaxgcS
      /xaRGyR+Tn57nroxHA7hOA4cx2GeJ/4EURQFruuykjHU6kh8vuu6cByHlWkX34sM/10RC8Aj
      Ben5o9EodF1RFGYIN5vNjZ0bCZlMBk+fPkW/31+hS5AhLMvikkWMZeoPIZlMMgrFbDZjzQPp
      i3R48fl89WlxXrqWTCYjiYFUhW5XxALwjrGL/rkOZJDe39+vBK1ICI6OjiIXhAzFYhGHh4eh
      JBlSqyiHmAevj9NzZYQ2sV8w8fmpHhG9P29vOI7DCHCUPsrPST/PZjNMJhOpqsc/U0aP2Aax
      ADxS5HI5VKtVWJaFs7OzlSiw4zgoFAo4Pz9f2/2dh6IoaDQa6HQ6rBwhLW7i3/NqR1QzDZoL
      CCfh88aqaZqhQBy/qKnEOn0+Go1C8QaaYzwewzCMlZ1ftFU8z9sq4UeGWAAeMer1Oquwdnt7
      y7rHAMuoaL/fh2EY6Ha7jO68CclkEp9++imAZelHAu+OpN1bhqgTjjwzpOdTfq9IqxC/giBA
      Pp9f4RoBSx4U349MVMdI4FzXDSX+74I4JfKRg3ZXYNlvmPKKdV1niTBUfSIIAjx79mzrebvd
      LiaTCfb29phvn3ZfUpM26dX8aUHJ8cB2Bbb4e0ReELA0fMVr/DPpZ9u20Wg0dlIHCfEJ8MhB
      PBkqQluv1zEej+F5Hvb391EqlVAqlVbcgtvMWywWUSwW0ev1QvU7ebsAWJ88Q9Fjx3Gki1/m
      FaNrFK2me0R1ivhPvJBFBdoesviBWAA+OhiGgaOjI4zHY/i+z3oI5PN56Lou5eRHQVGWRXsp
      OWdXFy7p87RY1zkAeLcp0aZ5tUXTNGbL8Dwk/n6Rc0RCE5UstA1iAfgIoaoqEwLqLawoy240
      7XZ756QQwzCQz+fZXLwqFDUXLyykp68DLXzf9+H7PivWS+8u0iscx2HGtPhMkW+0i9CLiAXg
      I4WmaWg0GrAsi5VTpLpBr1+/3nD3KvL5PMvNBd7SlUVjWBYY4yOwUacI7daiy1Mcw38X4xJR
      MQk+ur0rYgH4iKEoCvb29gC8LU+YSCS2Do6Jc1UqFVbYl9fJeb0ceKuO8H1/+XnEBQqAEe7E
      kjA8gmDZzmk8HoeSa2QeIPHdH4pYAD5yKIqCVCrFSiD2+31ks9kHz1UqlWDbNlNrEokEXNcN
      lVjkBYM8NXQ9CnxxryhSHK/uyPz+7wOxAHwLkM1m0e/30el0kM/nUSgUHjxXOp1GrVZjlAl+
      1/U8j2VwAbtHvTft3uTxSqVS0hIpst9JBXsoYjbotwCmaTJaxK6FoWRIJBI4ODhAu91GoVBg
      eQUAmFuSFj+1QOJVIh50UlCJFzGuIKNZ+L7PVDBixIrJOvwJ9E0QC8C3BOt064cgk8lA0zS0
      2+1Q1xdShaiXF/C2qC01uQNWd3uKU1CEmMhrslOBhJhOHErKF6EoCssBeChiAYgRiVQqtcK9
      tyyLRXBnsxnS6TSGwyHrFk/plXzxX76tKvn2TdNkNUBFKjbt/lQDiDLjqG4QPYMIg7ERHOO9
      QUxTBMC4+7qus473RGemku1EpZhOp6wyHTXZJuamzBiWXSOB0jQNpmkilUoxA13X9W+kBunf
      VIeK8e0GqSuygBi1dprP50in05hOp0gkEiy1cTabhfR30tn5VMZdDVjeA0XvRJTph+D/Aed1
      RLzmBoTmAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sales by Product' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sales by Segment' width='192'>
      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
    </thumbnail>
    <thumbnail height='49' name='Total Sales' width='192'>
      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
      kCGhqpKxVQAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
